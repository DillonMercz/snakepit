"use strict";(self.webpackChunksnakepit_react=self.webpackChunksnakepit_react||[]).push([[68],{68:(t,e,a)=>{a.d(e,{Game:()=>l});var i=a(555);const s={sidearm:{name:"Snake Fang",tier:0,damage:1,maxAmmo:1/0,fireRate:300,projectileSpeed:12,accuracy:90,rarity:"default",color:"#888888",secondaryColor:"#AAAAAA",glowColor:"#CCCCCC",accentColor:"#EEEEEE",ammoTypes:[],description:"Basic sidearm with unlimited ammo"},laser_pistol:{name:"Laser Pistol",tier:1,damage:2,maxAmmo:24,fireRate:400,projectileSpeed:18,accuracy:95,rarity:"common",color:"#FF4444",secondaryColor:"#FF7777",glowColor:"#FFAAAA",accentColor:"#FFCCCC",ammoTypes:["light_energy"],description:"Fast-firing energy sidearm"},plasma_smg:{name:"Plasma SMG",tier:1,damage:1.5,maxAmmo:30,fireRate:200,projectileSpeed:15,accuracy:85,rarity:"common",color:"#44FF44",secondaryColor:"#77FF77",glowColor:"#AAFFAA",accentColor:"#CCFFCC",ammoTypes:["plasma_cells"],description:"Rapid-fire plasma weapon",firingMode:"full_auto"},laser_rifle:{name:"Laser Rifle",tier:2,damage:3,maxAmmo:30,fireRate:600,projectileSpeed:20,accuracy:98,rarity:"uncommon",color:"#FF2222",secondaryColor:"#FF6666",glowColor:"#FF9999",accentColor:"#FFCCCC",ammoTypes:["light_energy","heavy_energy"],description:"Accurate long-range laser",firingMode:"tri_burst_sequential",burstCount:3,burstDelay:100,burstCooldown:800},plasma_cannon:{name:"Plasma Cannon",tier:2,damage:5,maxAmmo:15,fireRate:1e3,projectileSpeed:16,accuracy:90,rarity:"uncommon",color:"#22FF22",secondaryColor:"#66FF66",glowColor:"#99FF99",accentColor:"#CCFFCC",ammoTypes:["plasma_cells","heavy_plasma"],description:"Heavy plasma artillery",firingMode:"tri_burst_spread",burstCount:3,spreadAngle:.3},rocket_launcher:{name:"Rocket Launcher",tier:3,damage:8,maxAmmo:8,fireRate:2e3,projectileSpeed:14,accuracy:85,rarity:"rare",color:"#FF6622",secondaryColor:"#FF9966",glowColor:"#FFCC99",accentColor:"#FFDDCC",ammoTypes:["rockets"],description:"Explosive rocket weapon"},rail_gun:{name:"Rail Gun",tier:3,damage:12,maxAmmo:5,fireRate:3e3,projectileSpeed:25,accuracy:100,rarity:"rare",color:"#4444FF",secondaryColor:"#7777FF",glowColor:"#AAAAFF",accentColor:"#CCCCFF",ammoTypes:["rail_slugs"],description:"Piercing electromagnetic weapon"},minigun:{name:"Minigun",tier:4,damage:2,maxAmmo:500,fireRate:60,projectileSpeed:12,accuracy:75,rarity:"legendary",color:"#FF0000",secondaryColor:"#FF4444",glowColor:"#FF8888",accentColor:"#FFCCCC",ammoTypes:["heavy_energy","heavy_plasma"],description:"Rapid-fire heavy weapon with massive ammo capacity",spinUp:!0,spinUpTime:1e3,maxSpinLevel:10,firingMode:"full_auto",tracerRounds:!0}},o={light_energy:{name:"Energy Cells",color:"#FFFF44",minAmount:15,maxAmount:30,rarity:"common"},heavy_energy:{name:"Heavy Energy",color:"#FFAA44",minAmount:8,maxAmount:15,rarity:"uncommon"},plasma_cells:{name:"Plasma Cells",color:"#44FFAA",minAmount:10,maxAmount:20,rarity:"common"},heavy_plasma:{name:"Heavy Plasma",color:"#44FF44",minAmount:5,maxAmount:10,rarity:"uncommon"},rockets:{name:"Rockets",color:"#FF8844",minAmount:2,maxAmount:6,rarity:"rare"},rail_slugs:{name:"Rail Slugs",color:"#8844FF",minAmount:1,maxAmount:3,rarity:"rare"}},n={helmet:{name:"Combat Helmet",type:"defensive",duration:1/0,damageReduction:0,headProtection:1,helmetHealth:500,rarity:"common",color:"#888888",secondaryColor:"#AAAAAA",glowColor:"#CCCCCC",description:"Absorbs 500 damage to head before breaking"},forcefield:{name:"Energy Forcefield",type:"defensive",duration:2e4,damageReduction:.75,headProtection:.95,rarity:"uncommon",color:"#44AAFF",secondaryColor:"#66CCFF",glowColor:"#88DDFF",description:"Advanced energy shield with superior protection"},armor_plating:{name:"Armor Plating",type:"defensive",duration:45e3,damageReduction:.3,headProtection:.4,rarity:"common",color:"#666666",secondaryColor:"#999999",glowColor:"#BBBBBB",description:"Heavy armor plating for extended protection"},battering_ram:{name:"Battering Ram",type:"offensive",duration:25e3,boostDamage:75,speedBoost:1.5,rarity:"rare",color:"#FF6600",secondaryColor:"#FF9933",glowColor:"#FFCC66",description:"Ram through enemy segments while boosting, increased speed"},shield_generator:{name:"Shield Generator",type:"defensive",duration:15e3,damageReduction:.9,headProtection:.99,rarity:"rare",color:"#00FFAA",secondaryColor:"#33FFBB",glowColor:"#66FFCC",description:"Experimental shield technology"}};class h{constructor(t,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.x=t,this.y=e,this.size=25,this.collected=!1,this.type=a||this.randomWeaponType(),this.animationOffset=Math.random()*Math.PI*2,this.config=s[this.type]||s.sidearm,this.setWeaponProperties(),this.currentAmmo=this.maxAmmo,this.lastShotTime=0,this.burstState={inBurst:!1,shotsInBurst:0,lastBurstShotTime:0,burstCooldownStart:0},this.pulsePhase=Math.random()*Math.PI*2,this.rotationSpeed=.5+1*Math.random()}randomWeaponType(){const t=["laser_pistol","plasma_smg","laser_rifle","plasma_cannon","rocket_launcher","rail_gun","minigun"],e=[30,30,20,15,5,1,.5];let a=e.reduce(((t,e)=>t+e),0),i=Math.random()*a;for(let s=0;s<t.length;s++)if(i-=e[s],i<=0)return t[s];return t[0]}setWeaponProperties(){this.name=this.config.name,this.tier=this.config.tier,this.damage=this.config.damage,this.maxAmmo=this.config.maxAmmo,this.fireRate=this.config.fireRate,this.projectileSpeed=this.config.projectileSpeed,this.accuracy=this.config.accuracy,this.rarity=this.config.rarity,this.color=this.config.color,this.secondaryColor=this.config.secondaryColor,this.glowColor=this.config.glowColor,this.accentColor=this.config.accentColor,this.ammoTypes=this.config.ammoTypes,this.description=this.config.description}canShoot(){if(this.currentAmmo<=0)return!1;const t=Date.now();return"tri_burst_sequential"===(this.config.firingMode||"semi_auto")?this.burstState.inBurst?t-this.burstState.lastBurstShotTime>=(this.config.burstDelay||100):t-this.burstState.burstCooldownStart>=(this.config.burstCooldown||800):t-this.lastShotTime>=this.fireRate}shoot(){return!!this.canShoot()&&(this.currentAmmo--,this.lastShotTime=Date.now(),!0)}reload(t){const e=this.maxAmmo-this.currentAmmo,a=Math.min(t,e);return this.currentAmmo+=a,t-a}getAmmoPercentage(){return this.currentAmmo/this.maxAmmo}draw(t,e,a){if(this.collected)return;const i=this.x-e,s=this.y-a;if(i<-100||i>t.canvas.width+100||s<-100||s>t.canvas.height+100)return;const o=.001*Date.now();this.drawWeaponContainer(t,i,s,o),this.drawAmmoIndicator(t,i,s,o),this.drawWeaponDetails(t,i,s,o),this.drawWeaponEffects(t,i,s,o)}drawWeaponContainer(t,e,a,i){const s=this.size*(.1*Math.sin(2*i+this.pulsePhase)+1),o=t.createRadialGradient(e,a,0,e,a,2.2*s);o.addColorStop(0,this.color+"30"),o.addColorStop(.4,this.color+"20"),o.addColorStop(.8,this.color+"10"),o.addColorStop(1,"transparent"),t.fillStyle=o,t.beginPath(),t.arc(e,a,2.2*s,0,2*Math.PI),t.fill(),t.save(),t.translate(e,a),t.rotate(i*this.rotationSpeed+this.animationOffset);const n=.9*s;t.beginPath();for(let c=0;c<6;c++){const e=c*Math.PI/3,a=Math.cos(e)*n,i=Math.sin(e)*n;0===c?t.moveTo(a,i):t.lineTo(a,i)}t.closePath();const h=t.createRadialGradient(0,0,0,0,0,n);h.addColorStop(0,this.accentColor+"CC"),h.addColorStop(.3,this.secondaryColor+"AA"),h.addColorStop(.7,this.color+"88"),h.addColorStop(1,this.color+"DD"),t.fillStyle=h,t.fill(),t.strokeStyle=this.color,t.lineWidth=3,t.stroke();const r=.7*n;t.beginPath();for(let c=0;c<6;c++){const e=c*Math.PI/3,a=Math.cos(e)*r,i=Math.sin(e)*r;0===c?t.moveTo(a,i):t.lineTo(a,i)}t.closePath(),t.strokeStyle=this.secondaryColor+"80",t.lineWidth=2,t.stroke(),t.restore()}drawAmmoIndicator(t,e,a,i){const s=this.getAmmoPercentage(),o=1.1*this.size;t.strokeStyle="#333333",t.lineWidth=6,t.beginPath(),t.arc(e,a,o,0,2*Math.PI),t.stroke();const n=s*Math.PI*2;let h;h=s>.6?"#00FF00":s>.3?"#FFFF00":"#FF0000",s>0&&(t.strokeStyle=h,t.lineWidth=4,t.lineCap="round",t.beginPath(),t.arc(e,a,o,-Math.PI/2,-Math.PI/2+n),t.stroke()),t.fillStyle="#FFFFFF",t.font="bold 10px monospace",t.textAlign="center",t.textBaseline="middle",t.fillText("".concat(this.currentAmmo),e,a+1.4*this.size)}drawWeaponDetails(t,e,a,i){const s=.5*this.size;switch(t.save(),t.translate(e,a),this.type){case"sidearm":this.drawSidearmWeaponIcon(t,s,i);break;case"laser_pistol":case"laser_rifle":this.drawLaserWeaponIcon(t,s,i);break;case"plasma_smg":case"plasma_cannon":this.drawPlasmaWeaponIcon(t,s,i);break;case"rocket_launcher":this.drawMissileWeaponIcon(t,s,i);break;case"rail_gun":this.drawRailGunWeaponIcon(t,s,i);break;case"minigun":this.drawMinigunWeaponIcon(t,s,i)}t.restore(),t.fillStyle=this.color,t.font="bold 8px Arial",t.textAlign="center",t.textBaseline="middle",t.fillText(this.name,e,a-1.6*this.size)}drawWeaponEffects(t,e,a,i){for(let n=0;n<12;n++){const s=(1.5*i+n*(2*Math.PI/12))%(2*Math.PI),o=this.size*(1.8+.4*Math.sin(3*i+n)),h=e+Math.cos(s)*o,r=a+Math.sin(s)*o,c=1.5+.8*Math.sin(4*i+n),l=.4+.3*Math.sin(5*i+n),d=t.createRadialGradient(h,r,0,h,r,3*c);d.addColorStop(0,this.color+Math.floor(255*l).toString(16).padStart(2,"0")),d.addColorStop(.5,this.secondaryColor+Math.floor(128*l).toString(16).padStart(2,"0")),d.addColorStop(1,"transparent"),t.fillStyle=d,t.beginPath(),t.arc(h,r,3*c,0,2*Math.PI),t.fill(),t.fillStyle=this.accentColor,t.beginPath(),t.arc(h,r,c,0,2*Math.PI),t.fill()}const s=.3*this.size*(1+.5*Math.sin(6*i+this.pulsePhase)),o=t.createRadialGradient(e,a,0,e,a,s);o.addColorStop(0,"#FFFFFF"),o.addColorStop(.5,this.color),o.addColorStop(1,"transparent"),t.fillStyle=o,t.beginPath(),t.arc(e,a,s,0,2*Math.PI),t.fill()}drawLaserWeaponIcon(t,e,a){t.fillStyle="#FFFFFF",t.strokeStyle=this.color,t.lineWidth=2,t.fillRect(.8*-e,.2*-e,1.6*e,.4*e),t.strokeRect(.8*-e,.2*-e,1.6*e,.4*e),t.fillRect(.8*e,.1*-e,.4*e,.2*e),t.strokeRect(.8*e,.1*-e,.4*e,.2*e);const i=.7+.3*Math.sin(8*a);t.fillStyle=this.color+Math.floor(255*i).toString(16).padStart(2,"0"),t.fillRect(.3*-e,.15*-e,.6*e,.3*e),t.strokeStyle="#FF0000",t.lineWidth=1;for(let s=0;s<3;s++){const a=(s-1)*e*.1;t.beginPath(),t.moveTo(1.2*e,a),t.lineTo(1.5*e,a),t.stroke()}}drawPlasmaWeaponIcon(t,e,a){t.fillStyle="#FFFFFF",t.strokeStyle=this.color,t.lineWidth=2,t.fillRect(.9*-e,.3*-e,1.8*e,.6*e),t.strokeRect(.9*-e,.3*-e,1.8*e,.6*e),t.beginPath(),t.arc(.2*-e,0,.25*e,0,2*Math.PI),t.fill(),t.stroke();const i=.5+.5*Math.sin(6*a),s=t.createRadialGradient(.2*-e,0,0,.2*-e,0,.2*e);s.addColorStop(0,"#FFFFFF"),s.addColorStop(.5,this.color),s.addColorStop(1,this.secondaryColor),t.fillStyle=s,t.beginPath(),t.arc(.2*-e,0,.15*e*i,0,2*Math.PI),t.fill(),t.strokeStyle=this.secondaryColor,t.lineWidth=3;for(let o=0;o<4;o++){const a=.3*e+o*e*.2;t.beginPath(),t.arc(a,0,.15*e,0,2*Math.PI),t.stroke()}}drawMissileWeaponIcon(t,e,a){t.fillStyle="#FFFFFF",t.strokeStyle=this.color,t.lineWidth=2,t.fillRect(1*-e,.25*-e,2*e,.5*e),t.strokeRect(1*-e,.25*-e,2*e,.5*e),this.currentAmmo>0&&(t.fillStyle=this.secondaryColor,t.fillRect(.2*e,.15*-e,.6*e,.3*e),t.beginPath(),t.moveTo(.8*e,0),t.lineTo(1*e,.1*-e),t.lineTo(1*e,.1*e),t.closePath(),t.fill()),t.strokeStyle=this.secondaryColor,t.lineWidth=1,t.strokeRect(.8*-e,.35*-e,.3*e,.7*e);for(let i=0;i<3;i++){const a=(i-1)*e*.15;t.beginPath(),t.arc(1.1*-e,a,.05*e,0,2*Math.PI),t.stroke()}}drawSidearmWeaponIcon(t,e,a){t.fillStyle="#FFFFFF",t.strokeStyle=this.color,t.lineWidth=2,t.fillRect(.6*-e,.15*-e,1.2*e,.3*e),t.strokeRect(.6*-e,.15*-e,1.2*e,.3*e),t.fillRect(.6*e,.08*-e,.3*e,.16*e),t.strokeRect(.6*e,.08*-e,.3*e,.16*e),t.fillRect(.4*-e,.15*e,.2*e,.4*e),t.strokeRect(.4*-e,.15*e,.2*e,.4*e)}drawRailGunWeaponIcon(t,e,a){t.fillStyle="#FFFFFF",t.strokeStyle=this.color,t.lineWidth=2,t.fillRect(1.1*-e,.2*-e,2.2*e,.4*e),t.strokeRect(1.1*-e,.2*-e,2.2*e,.4*e),t.strokeStyle=this.secondaryColor,t.lineWidth=1,t.strokeRect(1*-e,.25*-e,2*e,.1*e),t.strokeRect(1*-e,.15*e,2*e,.1*e);const i=.6+.4*Math.sin(10*a);t.fillStyle=this.color+Math.floor(255*i).toString(16).padStart(2,"0"),t.fillRect(.2*-e,.1*-e,.4*e,.2*e),t.strokeStyle="#4444FF",t.lineWidth=2;for(let s=0;s<3;s++){const a=.6*-e+s*e*.4;t.beginPath(),t.arc(a,0,.12*e,0,2*Math.PI),t.stroke()}}drawMinigunWeaponIcon(t,e,a){const i=5*a;t.save(),t.rotate(i);const s=.3*e;for(let o=0;o<6;o++){const a=o/6*Math.PI*2,i=Math.cos(a)*s,n=Math.sin(a)*s;t.fillStyle=this.color,t.strokeStyle=this.secondaryColor,t.lineWidth=1,t.beginPath(),t.arc(i,n,.08*e,0,2*Math.PI),t.fill(),t.stroke(),t.fillStyle="#000000",t.beginPath(),t.arc(i,n,.04*e,0,2*Math.PI),t.fill()}if(t.restore(),t.fillStyle=this.secondaryColor,t.strokeStyle=this.color,t.lineWidth=2,t.beginPath(),t.arc(0,0,.2*e,0,2*Math.PI),t.fill(),t.stroke(),t.fillStyle=this.color,t.fillRect(.1*-e,.2*e,.2*e,.4*e),t.strokeRect(.1*-e,.2*e,.2*e,.4*e),t.fillStyle=this.accentColor,t.fillRect(.15*-e,.1*e,.3*e,.15*e),t.strokeRect(.15*-e,.1*e,.3*e,.15*e),Math.sin(10*a)>.5){const a=t.createRadialGradient(0,.5*-e,0,0,.5*-e,.3*e);a.addColorStop(0,"#FFFF00"),a.addColorStop(.5,"#FF8800"),a.addColorStop(1,"transparent"),t.fillStyle=a,t.beginPath(),t.arc(0,.5*-e,.3*e,0,2*Math.PI),t.fill()}}}class r{constructor(t,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this.x=t,this.y=e,this.size=15,this.collected=!1,this.type=a||this.randomAmmoType(),this.animationOffset=Math.random()*Math.PI*2,this.setAmmoProperties(i),this.bobPhase=Math.random()*Math.PI*2,this.sparklePhase=Math.random()*Math.PI*2}randomAmmoType(){const t=["light_energy","plasma_cells","heavy_energy","heavy_plasma","rockets","rail_slugs"],e=[30,25,20,15,8,2];let a=e.reduce(((t,e)=>t+e),0),i=Math.random()*a;for(let s=0;s<t.length;s++)if(i-=e[s],i<=0)return t[s];return t[0]}setAmmoProperties(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;const e=o[this.type];e?(this.color=e.color,this.secondaryColor=this.lightenColor(e.color),this.name=e.name,this.rarity=e.rarity,this.amount=t||e.minAmount+Math.floor(Math.random()*(e.maxAmount-e.minAmount+1))):(this.color="#FFFFFF",this.secondaryColor="#CCCCCC",this.amount=t||10,this.name="Unknown Ammo",this.rarity="common")}lightenColor(t){const e=t.replace("#",""),a=Math.min(255,parseInt(e.substr(0,2),16)+60),i=Math.min(255,parseInt(e.substr(2,2),16)+60),s=Math.min(255,parseInt(e.substr(4,2),16)+60);return"#".concat(a.toString(16).padStart(2,"0")).concat(i.toString(16).padStart(2,"0")).concat(s.toString(16).padStart(2,"0"))}draw(t,e,a){if(this.collected)return;const i=this.x-e,s=this.y-a;if(i<-50||i>t.canvas.width+50||s<-50||s>t.canvas.height+50)return;const o=.001*Date.now(),n=s+3*Math.sin(3*o+this.bobPhase);this.drawAmmoContainer(t,i,n,o),this.drawAmmoIcon(t,i,n,o),this.drawAmmoEffects(t,i,n,o)}drawAmmoContainer(t,e,a,i){const s=.9+.1*Math.sin(4*i+this.animationOffset),o=this.size*s,n=t.createRadialGradient(e,a,0,e,a,2*o);n.addColorStop(0,this.color+"60"),n.addColorStop(.5,this.color+"30"),n.addColorStop(1,"transparent"),t.fillStyle=n,t.beginPath(),t.arc(e,a,2*o,0,2*Math.PI),t.fill(),t.save(),t.translate(e,a),t.rotate(1.5*i+this.animationOffset);const h=.8*o;t.beginPath(),t.moveTo(0,-h),t.lineTo(h,0),t.lineTo(0,h),t.lineTo(-h,0),t.closePath();const r=t.createRadialGradient(0,0,0,0,0,h);r.addColorStop(0,"#FFFFFF"),r.addColorStop(.3,this.secondaryColor),r.addColorStop(1,this.color),t.fillStyle=r,t.fill(),t.strokeStyle=this.color,t.lineWidth=2,t.stroke(),t.restore()}drawAmmoIcon(t,e,a,i){const s=.4*this.size;switch(t.save(),t.translate(e,a),t.fillStyle="#FFFFFF",t.strokeStyle=this.color,t.lineWidth=1,this.type){case"laser":t.fillRect(.3*-s,.6*-s,.6*s,1.2*s),t.strokeRect(.3*-s,.6*-s,.6*s,1.2*s),t.fillRect(.1*-s,.8*-s,.2*s,.2*s);break;case"plasma":t.beginPath(),t.arc(0,0,.5*s,0,2*Math.PI),t.fill(),t.stroke();for(let e=0;e<4;e++){const a=e*Math.PI/2;t.beginPath(),t.moveTo(Math.cos(a)*s*.3,Math.sin(a)*s*.3),t.lineTo(Math.cos(a)*s*.7,Math.sin(a)*s*.7),t.stroke()}break;case"missile":t.fillRect(.1*-s,.6*-s,.2*s,1.2*s),t.strokeRect(.1*-s,.6*-s,.2*s,1.2*s),t.beginPath(),t.moveTo(0,.6*-s),t.lineTo(.1*-s,.8*-s),t.lineTo(.1*s,.8*-s),t.closePath(),t.fill(),t.stroke(),t.strokeRect(.3*-s,.4*s,.2*s,.2*s),t.strokeRect(.1*s,.4*s,.2*s,.2*s)}t.restore(),t.fillStyle=this.color,t.font="bold 8px monospace",t.textAlign="center",t.textBaseline="middle",t.fillText("+".concat(this.amount),e,a+1.2*this.size)}drawAmmoEffects(t,e,a,i){for(let s=0;s<6;s++){const o=(2*i+this.sparklePhase+s*(2*Math.PI/6))%(2*Math.PI),n=this.size*(1.2+.3*Math.sin(4*i+s)),h=e+Math.cos(o)*n,r=a+Math.sin(o)*n,c=1+.5*Math.sin(6*i+s),l=.6+.4*Math.sin(8*i+s);t.fillStyle=this.secondaryColor+Math.floor(255*l).toString(16).padStart(2,"0"),t.beginPath(),t.arc(h,r,c,0,2*Math.PI),t.fill()}}}class c{constructor(t,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.x=t,this.y=e,this.size=20,this.collected=!1,this.type=a||this.randomPowerupType(),this.animationOffset=Math.random()*Math.PI*2,this.config=n[this.type]||n.helmet,this.setPowerupProperties(),this.bobPhase=Math.random()*Math.PI*2,this.pulsePhase=Math.random()*Math.PI*2,this.rotationSpeed=1+.5*Math.random()}randomPowerupType(){const t=Object.keys(n),e=t.map((t=>{switch(n[t].rarity){case"common":return 50;case"uncommon":return 25;case"rare":return 10;default:return 30}})),a=e.reduce(((t,e)=>t+e),0);let i=Math.random()*a;for(let s=0;s<t.length;s++)if(i-=e[s],i<=0)return t[s];return t[0]}setPowerupProperties(){this.name=this.config.name,this.powerupType=this.config.type,this.duration=this.config.duration,this.damageReduction=this.config.damageReduction||0,this.headProtection=this.config.headProtection||0,this.boostDamage=this.config.boostDamage||0,this.rarity=this.config.rarity,this.color=this.config.color,this.secondaryColor=this.config.secondaryColor,this.glowColor=this.config.glowColor,this.description=this.config.description}update(){this.bobPhase+=.05,this.pulsePhase+=.08,this.animationOffset+=.02*this.rotationSpeed}draw(t,e,a){const i=this.x-e,s=this.y-a;t.save(),t.translate(i,s);const o=3*Math.sin(this.bobPhase);t.translate(0,o),t.rotate(this.animationOffset),this.drawWeaponBubble(t),this.drawPowerupIcon(t,.6*this.size),this.drawPowerupLabel(t),t.restore()}drawWeaponBubble(t){const e=.001*Date.now(),a=.8+.2*Math.sin(this.pulsePhase),i=2*this.size*a,s=t.createRadialGradient(0,0,0,0,0,i);s.addColorStop(0,this.glowColor+"60"),s.addColorStop(.5,this.glowColor+"30"),s.addColorStop(1,"transparent"),t.fillStyle=s,t.beginPath(),t.arc(0,0,i,0,2*Math.PI),t.fill();const o=t.createRadialGradient(.3*-this.size,.3*-this.size,0,0,0,this.size);o.addColorStop(0,this.color+"FF"),o.addColorStop(.7,this.secondaryColor+"DD"),o.addColorStop(1,this.color+"88"),t.fillStyle=o,t.beginPath(),t.arc(0,0,this.size,0,2*Math.PI),t.fill();const n=t.createRadialGradient(.4*-this.size,.4*-this.size,0,.2*-this.size,.2*-this.size,.6*this.size);n.addColorStop(0,"rgba(255, 255, 255, 0.8)"),n.addColorStop(.5,"rgba(255, 255, 255, 0.3)"),n.addColorStop(1,"transparent"),t.fillStyle=n,t.beginPath(),t.arc(0,0,this.size,0,2*Math.PI),t.fill(),t.strokeStyle=this.glowColor,t.lineWidth=2+.5*Math.sin(4*e+this.pulsePhase),t.beginPath(),t.arc(0,0,this.size,0,2*Math.PI),t.stroke();for(let h=0;h<6;h++){const a=(2*e+h*Math.PI/3)%(2*Math.PI),i=1.3*this.size,s=Math.cos(a)*i,o=Math.sin(a)*i,n=2+1*Math.sin(6*e+h);t.fillStyle=this.glowColor+"AA",t.beginPath(),t.arc(s,o,n,0,2*Math.PI),t.fill()}}drawPowerupIcon(t,e){switch(this.type){case"helmet":default:this.drawHelmetIcon(t,e);break;case"forcefield":this.drawForcefieldIcon(t,e);break;case"armor_plating":this.drawArmorIcon(t,e);break;case"battering_ram":this.drawBatteringRamIcon(t,e);break;case"shield_generator":this.drawShieldGeneratorIcon(t,e)}}drawHelmetIcon(t,e){t.fillStyle=this.color,t.strokeStyle=this.secondaryColor,t.lineWidth=2,t.beginPath(),t.arc(0,.2*-e,.6*e,0,Math.PI,!0),t.fill(),t.stroke(),t.fillStyle=this.secondaryColor,t.beginPath(),t.arc(0,.2*-e,.4*e,0,Math.PI,!0),t.fill(),t.fillStyle=this.color,t.fillRect(.3*-e,.1*e,.6*e,.2*e),t.strokeRect(.3*-e,.1*e,.6*e,.2*e)}drawForcefieldIcon(t,e){const a=.005*Date.now();for(let i=0;i<3;i++){const s=e*(.3+.2*i),o=.8-.2*i;t.strokeStyle=this.color+Math.floor(255*o).toString(16).padStart(2,"0"),t.lineWidth=3-i,t.beginPath(),t.arc(0,0,s+3*Math.sin(a+i),0,2*Math.PI),t.stroke()}t.fillStyle=this.glowColor,t.beginPath(),t.arc(0,0,.15*e,0,2*Math.PI),t.fill()}drawArmorIcon(t,e){t.fillStyle=this.color,t.strokeStyle=this.secondaryColor,t.lineWidth=2,t.fillRect(.4*-e,.4*-e,.8*e,.8*e),t.strokeRect(.4*-e,.4*-e,.8*e,.8*e);for(let a=0;a<3;a++){const i=.2*-e+a*e*.2;t.strokeStyle=this.secondaryColor,t.beginPath(),t.moveTo(.3*-e,i),t.lineTo(.3*e,i),t.stroke()}for(let a=-1;a<=1;a+=2)for(let i=-1;i<=1;i+=2)t.fillStyle=this.secondaryColor,t.beginPath(),t.arc(a*e*.25,i*e*.25,.05*e,0,2*Math.PI),t.fill()}drawBatteringRamIcon(t,e){t.fillStyle=this.color,t.strokeStyle=this.secondaryColor,t.lineWidth=2,t.beginPath(),t.moveTo(.4*e,0),t.lineTo(.2*-e,.3*-e),t.lineTo(.4*-e,.1*-e),t.lineTo(.4*-e,.1*e),t.lineTo(.2*-e,.3*e),t.closePath(),t.fill(),t.stroke();for(let a=0;a<3;a++){const i=.3*(a-1),s=Math.cos(i)*e*.3,o=Math.sin(i)*e*.3;t.fillStyle=this.secondaryColor,t.beginPath(),t.arc(s,o,.08*e,0,2*Math.PI),t.fill()}}drawShieldGeneratorIcon(t,e){const a=.008*Date.now();t.fillStyle=this.color,t.fillRect(.2*-e,.2*-e,.4*e,.4*e);for(let i=0;i<4;i++){const a=i*Math.PI*.5,s=Math.cos(a)*e*.3,o=Math.sin(a)*e*.3;t.save(),t.translate(s,o),t.rotate(a),t.fillStyle=this.secondaryColor,t.fillRect(.05*-e,.1*-e,.1*e,.2*e),t.restore()}t.strokeStyle=this.glowColor+"80",t.lineWidth=2,t.setLineDash([5,5]),t.lineDashOffset=10*a,t.beginPath(),t.arc(0,0,.7*e,0,2*Math.PI),t.stroke(),t.setLineDash([])}drawPowerupLabel(t){const e={helmet:"HELMET",forcefield:"SHIELD",armor_plating:"ARMOR",battering_ram:"RAM",shield_generator:"GENERATOR"}[this.type]||"POWERUP",a=this.size+15;t.save(),t.font="bold 8px monospace",t.textAlign="center",t.textBaseline="middle";const i=t.measureText(e).width+6;t.fillStyle="rgba(0, 0, 0, 0.7)",t.fillRect(-i/2,a-5,i,10),t.strokeStyle=this.color,t.lineWidth=1,t.strokeRect(-i/2,a-5,i,10),t.fillStyle=this.glowColor,t.fillText(e,0,a),t.shadowColor=this.glowColor,t.shadowBlur=2,t.fillText(e,0,a),t.restore()}}class l{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"classic";console.log("Game constructor started"),this.canvas=t,this.ctx=this.canvas.getContext("2d"),this.minimap=null,this.minimapCtx=null;const a=()=>{const t=this.canvas.getBoundingClientRect(),e=t.width||window.innerWidth,a=t.height||window.innerHeight;e>0&&a>0?(this.canvas.width=e,this.canvas.height=a,console.log("Canvas resized to:",this.canvas.width,"x",this.canvas.height)):console.log("Canvas size invalid:",e,"x",a,"rect:",t)};this.resizeCanvas=a,setTimeout(a,50),setTimeout(a,200),setTimeout(a,500),window.addEventListener("resize",a),this.worldWidth=4e3,this.worldHeight=4e3,this.gameMode=e,this.weapons=[],this.ammo=[],this.powerups=[],this.projectiles=[],this.coins=[],this.playerWager=0,this.availableWagers=[10,25,50,100,250,500],this.weaponInventory={primaryWeapon:null,secondaryWeapon:null,sidearm:new h(0,0,"sidearm"),currentSlot:"sidearm"},this.currentWeapon=this.weaponInventory.sidearm,this.lastWeaponSlot="sidearm",this.ammoInventory={light_energy:0,heavy_energy:0,plasma_cells:0,heavy_plasma:0,rockets:0,rail_slugs:0},this.gameRunning=!0,this.score=0,this.cashBalance=0,this.camera={x:1500,y:1500},this.currentKing=null,this.player=new d(2e3,2e3,"#FFD700",!0),this.player.gameInstance=this,this.playerWager=50,this.player.wager=this.playerWager,this.cashBalance=this.playerWager,this.player.activateSpawnInvincibility(this.playerWager),console.log("Initial player setup - segments:",this.player.segments.length,"cash balance: $"+this.cashBalance),"classic"===this.gameMode?this.score=0:this.score=this.cashBalance,this.remotePlayers=[],this.isMultiplayer=!0,this.roomId=null,this.playerId=null,this.realtimeChannel=null,this.multiplayerService=null,this.aiSnakes=[],this.food=[],this.glowOrbs=[],this.weapons=[],this.ammo=[],this.powerups=[],this.projectiles=[],this.coins=[],this.mouse={x:this.canvas.width/2,y:this.canvas.height/2},this.boosting=!1,this.mouseHeld=!1,this.generateFood(),this.generateGlowOrbs(),this.onStateUpdate=null,this.onGameOver=null,this.cashedOut=!1,this.spectating=!1,this.spectateTarget=0,this.cashoutBalance=0,console.log("Game constructor completed - waiting for start() call")}init(){if(console.log("Initializing multiplayer game..."),console.log("\ud83c\udf10 Multiplayer mode enabled - AI snakes disabled"),console.log("\ud83c\udfae Waiting for other players to join the room..."),"warfare"===this.gameMode){for(let t=0;t<5;t++){const t=Math.random()*this.worldWidth,e=Math.random()*this.worldHeight;this.weapons.push(new h(t,e))}for(let t=0;t<15;t++){const t=Math.random()*this.worldWidth,e=Math.random()*this.worldHeight;this.ammo.push(new r(t,e))}for(let t=0;t<8;t++){const t=Math.random()*this.worldWidth,e=Math.random()*this.worldHeight;this.powerups.push(new c(t,e))}}if("warfare"===this.gameMode)for(this.weapons=this.weapons.filter((t=>!t.collected));this.weapons.length<5;){const t=Math.random()*this.worldWidth,e=Math.random()*this.worldHeight;this.weapons.push(new h(t,e))}this.gameRunning=!0,this.score="warfare"===this.gameMode?this.cashBalance:0,this.camera={x:1500,y:1500},this.food=[],this.glowOrbs=[],this.mouse={x:this.canvas.width/2,y:this.canvas.height/2},this.boosting=!1,this.initializeGamepadSupport(),this.generateFood(),this.generateGlowOrbs()}generateFood(){console.log("Generating food...");const t="warfare"===this.gameMode?1e3:500;for(let e=0;e<t;e++)this.food.push({x:Math.random()*this.worldWidth,y:Math.random()*this.worldHeight,color:"hsl(".concat(360*Math.random(),", 70%, 60%)"),size:4+3*Math.random()});console.log("Generated ".concat(this.food.length," food items for ").concat(this.gameMode," mode"))}generateGlowOrbs(){console.log("Generating glow orbs...");for(let t=0;t<10;t++){const t=360*Math.random();this.glowOrbs.push({x:Math.random()*this.worldWidth,y:Math.random()*this.worldHeight,vx:2*(Math.random()-.5),vy:2*(Math.random()-.5),hue:t,size:8+4*Math.random(),glow:0,value:5})}console.log("Generated ".concat(this.glowOrbs.length," glow orbs"))}setupEventListeners(){this.canvas.addEventListener("mousemove",(t=>{const e=this.canvas.getBoundingClientRect();this.mouse.x=t.clientX-e.left,this.mouse.y=t.clientY-e.top})),this.canvas.addEventListener("mousedown",(t=>{0===t.button?"warfare"===this.gameMode&&this.currentWeapon&&!this.player.isInvincible()?(this.mouseHeld=!0,this.shoot()):this.boosting=!0:2===t.button&&(this.boosting=!0)})),this.canvas.addEventListener("mouseup",(t=>{0===t.button?(this.mouseHeld=!1,"warfare"!==this.gameMode&&(this.boosting=!1)):2===t.button&&(this.boosting=!1)})),this.canvas.addEventListener("contextmenu",(t=>{t.preventDefault()})),document.addEventListener("keydown",(t=>{if("Space"===t.code&&(t.preventDefault(),"warfare"===this.gameMode&&this.currentWeapon&&!this.player.isInvincible()?this.shoot():this.boosting=!0),"KeyC"===t.code&&(t.preventDefault(),this.cashOut()),"Tab"===t.code&&this.spectating&&(t.preventDefault(),this.cycleThroughSnakes()),"warfare"===this.gameMode)switch(t.code){case"Digit1":this.switchToWeapon("primaryWeapon");break;case"Digit2":this.switchToWeapon("secondaryWeapon");break;case"Digit3":this.switchToWeapon("sidearm");break;case"KeyQ":this.quickSwitchWeapon()}})),document.addEventListener("keyup",(t=>{"Space"===t.code&&(t.preventDefault(),this.boosting=!1)}))}switchToWeapon(t){const e=this.weaponInventory[t];e&&(e.currentAmmo>0||e.maxAmmo===1/0)&&(this.lastWeaponSlot=this.weaponInventory.currentSlot,this.weaponInventory.currentSlot=t,this.currentWeapon=e)}quickSwitchWeapon(){if(this.lastWeaponSlot&&this.weaponInventory[this.lastWeaponSlot]){const t=this.weaponInventory.currentSlot;this.switchToWeapon(this.lastWeaponSlot),this.lastWeaponSlot=t}}addWeaponToInventory(t){if(this.weaponInventory.primaryWeapon)if(this.weaponInventory.secondaryWeapon){const e=this.weaponInventory.currentSlot;"sidearm"!==e?(this.weaponInventory[e]=t,this.currentWeapon=t):(this.weaponInventory.primaryWeapon=t,this.switchToWeapon("primaryWeapon"))}else this.weaponInventory.secondaryWeapon=t,this.switchToWeapon("secondaryWeapon");else this.weaponInventory.primaryWeapon=t,this.switchToWeapon("primaryWeapon")}getAmmoInventory(){const t={};return Object.entries(this.ammoInventory).forEach((e=>{let[a,i]=e;i>0&&(t[a]=i)})),t}reloadWeaponsFromInventory(){["primaryWeapon","secondaryWeapon","sidearm"].forEach((t=>{const e=this.weaponInventory[t];e&&e.ammoTypes.length>0&&e.ammoTypes.forEach((t=>{if(this.ammoInventory[t]>0&&e.currentAmmo<e.maxAmmo){const a=e.maxAmmo-e.currentAmmo,i=Math.min(this.ammoInventory[t],a);e.currentAmmo+=i,this.ammoInventory[t]-=i}}))}))}reloadAIWeaponsFromInventory(t){t.weaponInventory&&t.ammoInventory&&["primaryWeapon","secondaryWeapon","sidearm"].forEach((e=>{const a=t.weaponInventory[e];a&&a.ammoTypes.length>0&&a.ammoTypes.forEach((e=>{if(t.ammoInventory[e]>0&&a.currentAmmo<a.maxAmmo){const i=a.maxAmmo-a.currentAmmo,s=Math.min(t.ammoInventory[e],i);a.currentAmmo+=s,t.ammoInventory[e]-=s}}))}))}shoot(){if(!this.currentWeapon)return;if(!this.currentWeapon.canShoot())return;const t=this.mouse.x+this.camera.x,e=this.mouse.y+this.camera.y,a=this.player.segments[0],i=t-a.x,s=e-a.y,o=Math.atan2(s,i),n=this.currentWeapon;switch(n.config.firingMode||"semi_auto"){case"tri_burst_sequential":this.handleSequentialBurst(n,o,a);break;case"tri_burst_spread":this.handleSpreadBurst(n,o,a);break;default:this.createProjectile(n,o,a)}n.currentAmmo<=0&&"sidearm"!==n.type&&this.switchToWeapon("sidearm")}handleSequentialBurst(t,e,a){const i=Date.now();t.burstState.inBurst||(t.burstState.inBurst=!0,t.burstState.shotsInBurst=0),this.createProjectile(t,e,a),t.burstState.shotsInBurst++,t.burstState.lastBurstShotTime=i,t.burstState.shotsInBurst>=(t.config.burstCount||3)&&(t.burstState.inBurst=!1,t.burstState.shotsInBurst=0,t.burstState.burstCooldownStart=i)}handleSpreadBurst(t,e,a){const i=t.config.burstCount||3,s=t.config.spreadAngle||.3;for(let o=0;o<i;o++){const n=e+(o-Math.floor(i/2))*s;this.createProjectile(t,n,a)}}createProjectile(t,e,a){if(!t.shoot())return;const i={x:a.x,y:a.y,vx:Math.cos(e)*t.projectileSpeed,vy:Math.sin(e)*t.projectileSpeed,type:t.type,damage:t.damage,owner:this.player,angle:e,creationTime:Date.now(),trail:[],animationOffset:Math.random()*Math.PI*2,isTracer:t.config.tracerRounds||!1};this.projectiles||(this.projectiles=[]),this.projectiles.push(i)}handleFullAutoFiring(){if(!this.mouseHeld||!this.currentWeapon||"warfare"!==this.gameMode)return;"full_auto"===(this.currentWeapon.config.firingMode||"semi_auto")&&this.currentWeapon.canShoot()&&this.shoot()}update(){if(this.gameRunning&&(this.handleFullAutoFiring(),this.updatePlayer(),this.updateRemotePlayers(),this.updateGlowOrbs(),this.checkCollisions(),this.updateCamera(),this.updateKing(),this.updateCoins(),this.updateGameState(),"warfare"===this.gameMode)){for(this.weapons=this.weapons.filter((t=>!t.collected));this.weapons.length<5;){const t=Math.random()*this.worldWidth,e=Math.random()*this.worldHeight;this.weapons.push(new h(t,e))}for(this.ammo=this.ammo.filter((t=>!t.collected));this.ammo.length<15;){const t=Math.random()*this.worldWidth,e=Math.random()*this.worldHeight;this.ammo.push(new r(t,e))}for(this.powerups=this.powerups.filter((t=>!t.collected));this.powerups.length<8;){const t=Math.random()*this.worldWidth,e=Math.random()*this.worldHeight;this.powerups.push(new c(t,e))}if(this.powerups.forEach((t=>{t.collected||t.update()})),"warfare"===this.gameMode){const t=[this.player,...this.aiSnakes].filter((t=>t.alive));this.weapons.forEach((e=>{e.collected||t.forEach((t=>{const a=t.segments[0].x-e.x,i=t.segments[0].y-e.y;Math.sqrt(a*a+i*i)<t.size+e.size&&(e.collected=!0,t.isPlayer?this.addWeaponToInventory(e):t.addWeaponToInventory(e))}))})),this.ammo.forEach((e=>{e.collected||t.forEach((t=>{const a=t.segments[0].x-e.x,i=t.segments[0].y-e.y;Math.sqrt(a*a+i*i)<t.size+e.size&&(e.collected=!0,t.isPlayer?(this.ammoInventory[e.type]=(this.ammoInventory[e.type]||0)+e.amount,this.reloadWeaponsFromInventory()):(t.ammoInventory[e.type]=(t.ammoInventory[e.type]||0)+e.amount,this.reloadAIWeaponsFromInventory(t)))}))})),this.powerups.forEach((e=>{e.collected||t.forEach((t=>{const a=t.segments[0].x-e.x,i=t.segments[0].y-e.y;Math.sqrt(a*a+i*i)<t.size+e.size&&(e.collected=!0,t.addPowerup(e),t.isPlayer&&"defensive"===e.powerupType?t.activatePowerup(e.type):t.isPlayer||t.activatePowerup(e.type))}))}))}this.projectiles&&(this.projectiles=this.projectiles.filter((t=>{if(t.trail||(t.trail=[]),t.trail.push({x:t.x,y:t.y,time:Date.now()}),t.trail.length>10&&t.trail.shift(),t.x+=t.vx,t.y+=t.vy,t.x<0||t.x>this.worldWidth||t.y<0||t.y>this.worldHeight)return!1;const e=[this.player,...this.aiSnakes].filter((t=>t.alive));for(const a of e){if(a===t.owner)continue;if("function"===typeof a.isInvincible?a.isInvincible():a.isInvincible||!1){console.log("Projectile hit invincible snake, no damage dealt");continue}const e=a.segments[0].x-t.x,i=a.segments[0].y-t.y;if(Math.sqrt(e*e+i*i)<a.size){const e=a.damageHelmet(25*t.damage);if(null!==e)return e&&console.log("Helmet destroyed!"),!1;const i=a.getHeadProtection();if(Math.random()<i){const e=10*t.damage;return a.segments[0].health-=e,a.segments[0].health<=0&&(this.convertSnakeToCoins(a),a.alive=!1,a.isPlayer&&this.gameOver()),!1}return this.convertSnakeToCoins(a),a.alive=!1,a.isPlayer&&this.gameOver(),!1}let s=!1;for(let o=1;o<a.segments.length;o++){const e=a.segments[o],i=e.x-t.x,n=e.y-t.y;if(Math.sqrt(i*i+n*n)<a.size){const i=a.getDamageReduction(),n=25*t.damage*(1-i);e.health-=n,e.health<=0&&this.breakOffSegments(a,o,t.owner),s=!0;break}}if(s)return!1}return!0})))}}updatePlayer(){if(!this.player.alive)return;const t=this.mouse.x+this.camera.x,e=this.mouse.y+this.camera.y,a=t-this.player.x,i=e-this.player.y,s=Math.atan2(i,a);this.player.targetAngle=s,this.player.update(this.boosting)}updateAISnake(t){t.alive&&("warfare"===this.gameMode?this.updateWarfareAI(t):this.updateClassicAI(t))}updateClassicAI(t){let e=t.x,a=t.y,i=1/0,s="none";this.coins&&this.coins.forEach((o=>{if(o.collected)return;const n=Math.hypot(o.x-t.x,o.y-t.y);n<i&&n<200&&(i=n,e=o.x,a=o.y,s="coin")})),"none"===s&&this.food.forEach((o=>{const n=Math.hypot(o.x-t.x,o.y-t.y);n<i&&n<150&&(i=n,e=o.x,a=o.y,s="food")})),"none"===s&&this.glowOrbs.forEach((o=>{const n=Math.hypot(o.x-t.x,o.y-t.y);n<i&&n<180&&(i=n,e=o.x,a=o.y,s="orb")}));[this.player,...this.aiSnakes].filter((e=>e!==t&&e.alive)).forEach((i=>{Math.hypot(i.x-t.x,i.y-t.y)<80&&(e=t.x-(i.x-t.x),a=t.y-(i.y-t.y),s="flee")}));const o=e-t.x,n=a-t.y;Math.hypot(o,n)>0?t.targetAngle=Math.atan2(n,o):t.targetAngle+=.3*(Math.random()-.5);const h=("coin"===s||"flee"===s)&&t.boost>30;t.update(h)}updateWarfareAI(t){const e=Date.now();if(e-t.lastDecisionTime<t.reactionTime)return void("function"===typeof t.update&&t.update(t.shouldBoost));t.lastDecisionTime=e;const a=this.assessSituation(t);this.updateAICombatState(t,a);const i=this.executeAIBehavior(t,a);if(void 0!==i.targetX&&void 0!==i.targetY){const e=i.targetX-t.x,a=i.targetY-t.y;Math.hypot(e,a)>0&&(t.targetAngle=Math.atan2(a,e))}const s="function"===typeof t.isInvincible?t.isInvincible():t.isInvincible||!1;if(i.shoot&&i.shootTarget&&!s&&"function"===typeof t.shoot){const e=t.shoot(i.shootTarget.x,i.shootTarget.y);e&&this.projectiles.push(e)}i.switchWeapon&&this.handleAIWeaponSwitch(t,a),t.shouldBoost=i.boost,"function"===typeof t.update&&t.update(i.boost)}assessSituation(t){const e={nearbyEnemies:[],nearbyWeapons:[],nearbyAmmo:[],nearbyFood:[],nearbyOrbs:[],nearbyCoins:[],incomingProjectiles:[],threatLevel:0,opportunityLevel:0},a=[this.player,...this.aiSnakes].filter((e=>e!==t&&e.alive)),i=300;return a.forEach((a=>{const s=Math.hypot(a.x-t.x,a.y-t.y);if(s<i){const i={snake:a,distance:s,angle:Math.atan2(a.y-t.y,a.x-t.x),size:a.segments.length,hasWeapon:a.currentWeapon&&"sidearm"!==a.currentWeapon.type,threatScore:this.calculateThreatScore(t,a,s)};e.nearbyEnemies.push(i),e.threatLevel+=i.threatScore}})),this.weapons.forEach((a=>{if(!a.collected){const s=Math.hypot(a.x-t.x,a.y-t.y);s<i&&e.nearbyWeapons.push({weapon:a,distance:s,angle:Math.atan2(a.y-t.y,a.x-t.x),priority:this.calculateWeaponPriority(t,a)})}})),this.ammo.forEach((a=>{if(!a.collected){const s=Math.hypot(a.x-t.x,a.y-t.y);s<i&&e.nearbyAmmo.push({ammo:a,distance:s,angle:Math.atan2(a.y-t.y,a.x-t.x),needed:this.isAmmoNeeded(t,a.type)})}})),this.food.forEach((a=>{const i=Math.hypot(a.x-t.x,a.y-t.y);i<200&&e.nearbyFood.push({food:a,distance:i,angle:Math.atan2(a.y-t.y,a.x-t.x)})})),this.glowOrbs.forEach((a=>{const s=Math.hypot(a.x-t.x,a.y-t.y);s<i&&(e.nearbyOrbs.push({orb:a,distance:s,angle:Math.atan2(a.y-t.y,a.x-t.x),priority:10}),e.opportunityLevel+=5)})),this.coins&&this.coins.forEach((a=>{if(a.collected)return;const s=Math.hypot(a.x-t.x,a.y-t.y);s<i&&(e.nearbyCoins.push({coin:a,distance:s,angle:Math.atan2(a.y-t.y,a.x-t.x),priority:15,value:a.value}),e.opportunityLevel+=8)})),this.projectiles&&this.projectiles.forEach((a=>{if(a.owner!==t){const i=Math.hypot(a.x-t.x,a.y-t.y),s=Math.atan2(a.vy,a.vx),o=Math.atan2(t.y-a.y,t.x-a.x),n=Math.abs(s-o);i<150&&n<.5&&e.incomingProjectiles.push({projectile:a,distance:i,timeToImpact:i/Math.hypot(a.vx,a.vy),dangerLevel:a.damage/Math.max(i,1)})}})),e}updateGlowOrbs(){this.glowOrbs.forEach((t=>{t.x+=t.vx,t.y+=t.vy,(t.x<0||t.x>this.worldWidth)&&(t.vx*=-1),(t.y<0||t.y>this.worldHeight)&&(t.vy*=-1),t.x=Math.max(0,Math.min(this.worldWidth,t.x)),t.y=Math.max(0,Math.min(this.worldHeight,t.y)),t.glow=(t.glow+.1)%(2*Math.PI)}))}convertSnakeToFood(t){t.segments.forEach(((e,a)=>{a>0&&this.food.push({x:e.x+20*(Math.random()-.5),y:e.y+20*(Math.random()-.5),color:t.isPlayer?"#FFD700":"#FF6B6B",size:8+4*Math.random(),value:2})}))}convertSnakeToCoins(t){const e=t.isPlayer?this.cashBalance:t.collectedCash||0;t.isPlayer?(this.cashBalance=0,"warfare"===this.gameMode&&(this.score=this.cashBalance)):t.collectedCash=0;const a=4*t.segments.length,i=Math.max(1,Math.floor(e/a));t.segments.forEach((t=>{for(let e=0;e<4;e++)this.coins.push({x:t.x+40*(Math.random()-.5),y:t.y+40*(Math.random()-.5),value:i,size:8+4*Math.random(),color:"#FFD700",collected:!1,bobPhase:Math.random()*Math.PI*2,sparklePhase:Math.random()*Math.PI*2,creationTime:Date.now()})})),console.log("Snake died with $".concat(e," cash, created ").concat(a," coins worth $").concat(i," each (total: $").concat(a*i,")"))}breakOffSegments(t,e,a){const i=t.segments.splice(e),s=this.calculateSegmentValue(t),o=s*i.length;t.isPlayer?(this.cashBalance=Math.max(0,this.cashBalance-o),this.score=this.cashBalance):t.collectedCash=Math.max(0,(t.collectedCash||0)-o),i.forEach(((t,e)=>{for(let a=0;a<3;a++)this.coins.push({x:t.x+30*(Math.random()-.5),y:t.y+30*(Math.random()-.5),value:Math.floor(s/3),size:8+4*Math.random(),color:"#FFD700",collected:!1,bobPhase:Math.random()*Math.PI*2,sparklePhase:Math.random()*Math.PI*2,creationTime:Date.now()})})),this.updateSnakeCashValue(t)}calculateSegmentValue(t){const e=Math.max(t.wager||10,10);return Math.floor(e/10)}updateSnakeCashValue(t){const e=this.calculateSegmentValue(t);t.cashValue=t.segments.length*e}updateCoins(){const t=Date.now();this.coins=this.coins.filter((e=>!e.collected&&t-e.creationTime<3e4));const e=[this.player,...this.aiSnakes].filter((t=>t.alive));this.coins.forEach((t=>{t.collected||e.forEach((e=>{const a=e.segments[0].x-t.x,i=e.segments[0].y-t.y;Math.sqrt(a*a+i*i)<e.size+t.size&&(t.collected=!0,e.isPlayer?(this.cashBalance+=t.value,"warfare"===this.gameMode&&(this.score=this.cashBalance)):e.collectedCash=(e.collectedCash||0)+t.value)}))}))}calculateThreatScore(t,e,a){let i=0;return i+=.5*(e.segments.length-t.segments.length),e.currentWeapon&&"sidearm"!==e.currentWeapon.type&&(i+=2*e.currentWeapon.tier),i+=(300-a)/100,e.isPlayer&&(i+=3),Math.max(0,i)}calculateWeaponPriority(t,e){let a=e.tier;return t.weaponPreference!==e.type&&"balanced"!==t.weaponPreference||(a+=2),t.currentWeapon&&"sidearm"!==t.currentWeapon.type||(a+=3),a}isAmmoNeeded(t,e){var a,i;if(!t.ammoInventory)return!1;return[null===(a=t.weaponInventory)||void 0===a?void 0:a.primaryWeapon,null===(i=t.weaponInventory)||void 0===i?void 0:i.secondaryWeapon].some((t=>t&&t.ammoTypes.includes(e)&&t.currentAmmo<t.maxAmmo))}updateAICombatState(t,e){const a=Date.now(),i=a-t.lastStateChange;switch(t.combatState){case"hunting":e.threatLevel>5?(t.combatState="engaging",t.lastStateChange=a):(e.nearbyWeapons.length>0||e.nearbyAmmo.length>0)&&(t.combatState="collecting",t.lastStateChange=a);break;case"engaging":e.threatLevel<2&&i>3e3?(t.combatState="hunting",t.lastStateChange=a):(t.boost<30||t.currentWeapon&&t.currentWeapon.currentAmmo<3)&&(t.combatState="retreating",t.lastStateChange=a);break;case"retreating":e.threatLevel<1&&i>2e3&&(t.combatState="collecting",t.lastStateChange=a);break;case"collecting":e.threatLevel>3?(t.combatState="engaging",t.lastStateChange=a):i>5e3&&(t.combatState="hunting",t.lastStateChange=a)}}executeAIBehavior(t,e){const a={targetX:t.x,targetY:t.y,shoot:!1,shootTarget:null,boost:!1,switchWeapon:!1};switch(t.combatState){case"hunting":return this.executeHuntingBehavior(t,e,a);case"engaging":return this.executeEngagingBehavior(t,e,a);case"retreating":return this.executeRetreatingBehavior(t,e,a);case"collecting":return this.executeCollectingBehavior(t,e,a)}return a}executeHuntingBehavior(t,e,a){if(e.nearbyEnemies.length>0){const i=e.nearbyEnemies.filter((t=>t.distance<300)).sort(((t,e)=>t.threatScore-e.threatScore))[0];i&&(a.targetX=i.snake.x,a.targetY=i.snake.y,a.boost=i.distance>100&&t.boost>50,i.distance<250&&t.currentWeapon&&!t.isInvincible()&&(a.shoot=!0,a.shootTarget={x:i.snake.x,y:i.snake.y}))}else if(e.nearbyCoins.length>0){const i=e.nearbyCoins.sort(((t,e)=>{const a=t.value/Math.max(t.distance,1);return e.value/Math.max(e.distance,1)-a}))[0];a.targetX=i.coin.x,a.targetY=i.coin.y,a.boost=i.distance>60&&t.boost>30}else if(e.nearbyOrbs.length>0){const i=e.nearbyOrbs.sort(((t,e)=>t.distance-e.distance))[0];a.targetX=i.orb.x,a.targetY=i.orb.y,a.boost=i.distance>80&&t.boost>30}else if(e.nearbyWeapons.length>0&&(!t.currentWeapon||"sidearm"===t.currentWeapon.type)){const t=e.nearbyWeapons.sort(((t,e)=>e.priority-t.priority))[0];a.targetX=t.weapon.x,a.targetY=t.weapon.y,a.boost=t.distance>100}else{const e=t.patrolTarget.x-t.x,i=t.patrolTarget.y-t.y;Math.hypot(e,i)<50&&(t.patrolTarget={x:Math.random()*this.worldWidth,y:Math.random()*this.worldHeight}),a.targetX=t.patrolTarget.x,a.targetY=t.patrolTarget.y}return a}executeEngagingBehavior(t,e,a){if(e.nearbyEnemies.length>0){const i=e.nearbyEnemies.sort(((t,e)=>{const a=t.threatScore+(t.hasWeapon?2:0)-t.distance/50;return e.threatScore+(e.hasWeapon?2:0)-e.distance/50-a}))[0],s=i.snake.x+Math.cos(i.snake.angle)*i.snake.speed*10,o=i.snake.y+Math.sin(i.snake.angle)*i.snake.speed*10;if(i.distance<80)a.targetX=t.x-(i.snake.x-t.x),a.targetY=t.y-(i.snake.y-t.y),a.boost=!0;else if(i.distance>180)a.targetX=i.snake.x,a.targetY=i.snake.y,a.boost=t.boost>40;else{const e=i.angle+Math.PI/2;a.targetX=t.x+50*Math.cos(e),a.targetY=t.y+50*Math.sin(e)}t.canShoot()&&i.distance<300&&!t.isInvincible()&&(a.shoot=!0,a.shootTarget={x:s,y:o}),a.switchWeapon=this.shouldSwitchWeapon(t,i.distance)}return a}executeRetreatingBehavior(t,e,a){if(e.nearbyEnemies.length>0){let i=0,s=0;e.nearbyEnemies.forEach((e=>{const a=1/Math.max(e.distance,1);i-=(e.snake.x-t.x)*a,s-=(e.snake.y-t.y)*a})),a.targetX=t.x+i,a.targetY=t.y+s,a.boost=!0}if(e.nearbyOrbs.length>0&&t.boost<50){const t=e.nearbyOrbs.sort(((t,e)=>t.distance-e.distance))[0];a.targetX=t.orb.x,a.targetY=t.orb.y}return a}executeCollectingBehavior(t,e,a){if(e.nearbyCoins.length>0){const t=e.nearbyCoins.sort(((t,e)=>{const a=t.value/Math.max(t.distance,1);return e.value/Math.max(e.distance,1)-a}))[0];a.targetX=t.coin.x,a.targetY=t.coin.y,a.boost=t.distance>60}else if(e.nearbyOrbs.length>0){const t=e.nearbyOrbs.sort(((t,e)=>t.distance-e.distance))[0];a.targetX=t.orb.x,a.targetY=t.orb.y,a.boost=t.distance>80}else if(e.nearbyWeapons.length>0){const t=e.nearbyWeapons.sort(((t,e)=>e.priority-t.priority))[0];a.targetX=t.weapon.x,a.targetY=t.weapon.y,a.boost=t.distance>100}else if(e.nearbyAmmo.length>0){const t=e.nearbyAmmo.filter((t=>t.needed)).sort(((t,e)=>t.distance-e.distance))[0];t&&(a.targetX=t.ammo.x,a.targetY=t.ammo.y,a.boost=t.distance>80)}else if(e.nearbyFood.length>0){const t=e.nearbyFood.sort(((t,e)=>t.distance-e.distance))[0];a.targetX=t.food.x,a.targetY=t.food.y}return a}shouldSwitchWeapon(t,e){if(!t.weaponInventory)return!1;if(!t.currentWeapon)return!0;if(e>150){const e=t.weaponInventory.primaryWeapon;if(e&&"rail_gun"===e.type&&e.currentAmmo>0)return!0}if(e<100){const e=t.weaponInventory.secondaryWeapon;if(e&&("plasma_smg"===e.type||"rocket_launcher"===e.type)&&e.currentAmmo>0)return!0}return!1}handleAIWeaponSwitch(t,e){if(!t.weaponInventory)return;const a=["primaryWeapon","secondaryWeapon","sidearm"],i=a.indexOf(t.weaponInventory.currentSlot),s=a[(i+1)%a.length];t.weaponInventory[s]&&t.weaponInventory[s].currentAmmo>0&&t.switchToWeapon(s)}checkCollisions(){const t=[this.player,...this.aiSnakes].filter((t=>t.alive));t.forEach((t=>{const e=3.5*t.size;for(let a=this.food.length-1;a>=0;a--){const i=this.food[a],s=Math.hypot(i.x-t.x,i.y-t.y);if(s<e&&s>t.size+i.size){const a=1.2+2*(1-s/e),o=Math.atan2(t.y-i.y,t.x-i.x);i.x+=Math.cos(o)*a,i.y+=Math.sin(o)*a}if(s<t.size+i.size)if(this.food.splice(a,1),t===this.player){const t=.05*10;this.player.growthQueue+=t,this.player.addSpeedBoost(1),this.player.boostCapRemoved=!0,this.player.boost+=5,"warfare"===this.gameMode&&(this.score=this.cashBalance),this.updateGameState()}else{const e=.05*10;t.growthQueue+=e,t.addSpeedBoost(1),t.boostCapRemoved=!0,t.boost+=5}}for(let a=this.glowOrbs.length-1;a>=0;a--){const i=this.glowOrbs[a],s=Math.hypot(i.x-t.x,i.y-t.y);if(s<e&&s>t.size+i.size){const a=.8+1.5*(1-s/e),o=Math.atan2(t.y-i.y,t.x-i.x);i.x+=Math.cos(o)*a,i.y+=Math.sin(o)*a}if(s<t.size+i.size){if(this.glowOrbs.splice(a,1),t.boost+=100,console.log("Golden orb collected! Boost increased by 100%, now at ".concat(t.boost,"%")),"classic"===this.gameMode){for(let e=0;e<i.value;e++)t.grow();t===this.player&&(this.score+=2*i.value)}t===this.player&&this.updateGameState();const e=360*Math.random();this.glowOrbs.push({x:Math.random()*this.worldWidth,y:Math.random()*this.worldHeight,vx:2*(Math.random()-.5),vy:2*(Math.random()-.5),hue:e,size:8+4*Math.random(),glow:0,value:5})}}})),t.forEach((e=>{t.forEach((t=>{if(e===t||!e.alive||!t.alive)return;const a="function"===typeof e.isInvincible?e.isInvincible():e.isInvincible||!1,i="function"===typeof t.isInvincible?t.isInvincible():t.isInvincible||!1;a||i||t.segments.forEach(((a,i)=>{if(0===i)return;if(Math.hypot(a.x-e.x,a.y-e.y)<e.size+t.size-2){const s=e.getBoostDamage();if(e.boost<e.maxBoost&&s>0&&!e.isInvincible()){if(a.health-=s,a.health<=0)return void this.breakOffSegments(t,i,e);{const t=Math.atan2(e.y-a.y,e.x-a.x);return e.x+=20*Math.cos(t),void(e.y+=20*Math.sin(t))}}if(!e.isInvincible()){if(e.alive=!1,this.convertSnakeToCoins(e),e.isPlayer)return console.log("Player died from collision, calling gameOver()"),void this.gameOver();setTimeout((()=>{const t=Math.random()*this.worldWidth,a=Math.random()*this.worldHeight,i=["#ff0080","#00ff41","#00ffff","#ff8000","#8000ff","#ffff00","#ff4444","#44ff44","#4444ff"],s=i[Math.floor(Math.random()*i.length)],o=new d(t,a,s,!1);o.gameInstance=this,o.wager=this.availableWagers[Math.floor(Math.random()*this.availableWagers.length)],o.collectedCash=o.wager,this.updateSnakeCashValue(o),"function"===typeof o.activateSpawnInvincibility&&o.activateSpawnInvincibility(o.wager);const n=this.aiSnakes.indexOf(e);var h;-1!==n&&(this.aiSnakes[n]=o,console.log("Respawned AI snake: ".concat((null===(h=o.aiPersonality)||void 0===h?void 0:h.name)||"Classic"," at (").concat(Math.round(t),", ").concat(Math.round(a),") with wager $").concat(o.wager||0)))}),3e3)}}}))}))}));const e="warfare"===this.gameMode?800:400,a="warfare"===this.gameMode?100:50;if(this.food.length<e)for(let i=0;i<a;i++)this.food.push({x:Math.random()*this.worldWidth,y:Math.random()*this.worldHeight,color:"hsl(".concat(360*Math.random(),", 70%, 60%)"),size:4+3*Math.random()})}gameOver(){console.log("\ud83d\udc80\ud83d\udc80\ud83d\udc80 GAME OVER METHOD CALLED \ud83d\udc80\ud83d\udc80\ud83d\udc80"),this.gameRunning=!1,this.player&&(this.player.alive=!1);const t={score:"warfare"===this.gameMode?this.cashBalance:this.score,cashBalance:this.cashBalance,length:this.player?this.player.segments.length:0,boost:this.player?this.player.boost:0,weapon:this.currentWeapon?this.currentWeapon.name:"None",cooldown:"Ready",isGameOver:!0,finalScore:"warfare"===this.gameMode?this.cashBalance:this.score,finalLength:this.player?this.player.segments.length:0,gameMode:this.gameMode,cashedOut:this.cashedOut||!1,spectating:this.spectating||!1};console.log("Game over state:",t),this.onGameOver?(console.log("Calling onGameOver callback"),this.onGameOver(t)):console.log("No onGameOver callback found"),this.onStateUpdate?(console.log("Calling onStateUpdate with game over state"),this.onStateUpdate(t)):console.log("No onStateUpdate callback found")}updateCamera(){let t,e;if(this.spectating){const a=this.aiSnakes.filter((t=>t.alive));if(!(a.length>0))return;{const i=a[this.spectateTarget%a.length];t=i.x-this.canvas.width/2,e=i.y-this.canvas.height/2}}else{if(!this.player||!this.player.alive)return;t=this.player.x-this.canvas.width/2,e=this.player.y-this.canvas.height/2}this.camera.x+=.1*(t-this.camera.x),this.camera.y+=.1*(e-this.camera.y),this.camera.x=Math.max(0,Math.min(this.worldWidth-this.canvas.width,this.camera.x)),this.camera.y=Math.max(0,Math.min(this.worldHeight-this.canvas.height,this.camera.y))}updateKing(){const t=[this.player,...this.aiSnakes].filter((t=>t.alive));if(0===t.length)return;let e=t[0],a=this.player.isPlayer?this.cashBalance:t[0].collectedCash||0;t.forEach((t=>{const i=t.isPlayer?this.cashBalance:t.collectedCash||0;i>a&&(a=i,e=t)})),this.currentKing!==e&&(this.currentKing=e,console.log("New king: ".concat(e.isPlayer?"Player":"AI"," with balance $").concat(a)))}render(){Math.random()<.01&&console.log("Rendering frame, canvas size:",this.canvas.width,"x",this.canvas.height),this.ctx.fillStyle="#0a0a0a",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.drawGrid(),this.drawFood(),this.drawGlowOrbs(),this.drawSnakes(),"warfare"===this.gameMode&&(this.drawWeapons(),this.drawAmmo(),this.drawPowerups(),this.drawProjectiles()),this.drawCoins(),this.drawKingIndicator(),this.drawDebugInfo(),this.drawMinimap()}drawWeapons(){this.weapons.forEach((t=>{t.collected||t.draw(this.ctx,this.camera.x,this.camera.y)}))}drawAmmo(){this.ammo.forEach((t=>{t.collected||t.draw(this.ctx,this.camera.x,this.camera.y)}))}drawPowerups(){this.powerups.forEach((t=>{t.collected||t.draw(this.ctx,this.camera.x,this.camera.y)}))}drawCoins(){if(!this.coins)return;const t=.001*Date.now();this.coins.forEach((e=>{if(e.collected)return;const a=e.x-this.camera.x,i=e.y-this.camera.y;if(a<-50||a>this.canvas.width+50||i<-50||i>this.canvas.height+50)return;const s=i+3*Math.sin(3*t+e.bobPhase),o=.5*Math.sin(4*t+e.sparklePhase)+.5,n=e.size*(2+.5*o),h=this.ctx.createRadialGradient(a,s,0,a,s,n);h.addColorStop(0,"#FFD700"),h.addColorStop(.5,"rgba(255, 215, 0, 0.6)"),h.addColorStop(1,"transparent"),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.arc(a,s,n,0,2*Math.PI),this.ctx.fill();const r=this.ctx.createRadialGradient(a-.3*e.size,s-.3*e.size,0,a,s,e.size);r.addColorStop(0,"#FFFF80"),r.addColorStop(.7,"#FFD700"),r.addColorStop(1,"#B8860B"),this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(a,s,e.size,0,2*Math.PI),this.ctx.fill(),this.ctx.strokeStyle="#B8860B",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(a,s,e.size,0,2*Math.PI),this.ctx.stroke(),this.ctx.fillStyle="#8B4513",this.ctx.font="".concat(1.2*e.size,"px bold monospace"),this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText("$",a,s);for(let c=0;c<4;c++){const i=(2*t+c*Math.PI/2)%(2*Math.PI),n=1.8*e.size,h=a+Math.cos(i)*n,r=s+Math.sin(i)*n;this.ctx.fillStyle="rgba(255, 255, 255, ".concat(o,")"),this.ctx.beginPath(),this.ctx.arc(h,r,1.5,0,2*Math.PI),this.ctx.fill()}}))}drawProjectiles(){this.projectiles&&this.projectiles.forEach((t=>{if(!isFinite(t.x)||!isFinite(t.y))return void console.warn("Invalid projectile position:",t.x,t.y);const e=t.x-this.camera.x,a=t.y-this.camera.y;if(!isFinite(e)||!isFinite(a))return void console.warn("Invalid screen coordinates:",e,a);if(e<-100||e>this.canvas.width+100||a<-100||a>this.canvas.height+100)return;const i=.001*Date.now(),s=.001*(Date.now()-t.creationTime);switch(t.type){case"sidearm":default:this.drawDefaultProjectile(t,e,a,i,s);break;case"laser_pistol":case"laser_rifle":this.drawLaserProjectile(t,e,a,i,s);break;case"plasma_smg":case"plasma_cannon":this.drawPlasmaProjectile(t,e,a,i,s);break;case"rocket_launcher":this.drawMissileProjectile(t,e,a,i,s);break;case"rail_gun":this.drawRailGunProjectile(t,e,a,i,s)}}))}drawLaserProjectile(t,e,a,i,s){this.ctx.save();const o=30,n=t.angle;for(let h=0;h<3;h++){const t=4*(3-h),i=.3-.1*h;this.ctx.strokeStyle="rgba(255, 68, 68, ".concat(i,")"),this.ctx.lineWidth=t,this.ctx.lineCap="round",this.ctx.beginPath(),this.ctx.moveTo(e-Math.cos(n)*o,a-Math.sin(n)*o),this.ctx.lineTo(e+Math.cos(n)*o,a+Math.sin(n)*o),this.ctx.stroke()}this.ctx.strokeStyle="#FFFFFF",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(e-Math.cos(n)*o,a-Math.sin(n)*o),this.ctx.lineTo(e+Math.cos(n)*o,a+Math.sin(n)*o),this.ctx.stroke();for(let h=0;h<6;h++){const t=n+.5*(Math.random()-.5),i=15+10*Math.random(),s=e+Math.cos(t)*i,o=a+Math.sin(t)*i;this.ctx.fillStyle="rgba(255, 255, 255, ".concat(.8*Math.random(),")"),this.ctx.beginPath(),this.ctx.arc(s,o,1+2*Math.random(),0,2*Math.PI),this.ctx.fill()}this.ctx.restore()}drawPlasmaProjectile(t,e,a,i,s){this.ctx.save();const o=12+4*Math.sin(8*i+t.animationOffset);this.drawProjectileTrail(t,"#44FF44",.6);const n=this.ctx.createRadialGradient(e,a,0,e,a,2*o);n.addColorStop(0,"rgba(68, 255, 68, 0.4)"),n.addColorStop(.5,"rgba(68, 255, 68, 0.2)"),n.addColorStop(1,"transparent"),this.ctx.fillStyle=n,this.ctx.beginPath(),this.ctx.arc(e,a,2*o,0,2*Math.PI),this.ctx.fill();const h=this.ctx.createRadialGradient(e,a,0,e,a,o);h.addColorStop(0,"#FFFFFF"),h.addColorStop(.3,"#44FF44"),h.addColorStop(.7,"#228822"),h.addColorStop(1,"rgba(34, 136, 34, 0.5)"),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.arc(e,a,o,0,2*Math.PI),this.ctx.fill(),this.ctx.strokeStyle="#FFFFFF",this.ctx.lineWidth=2,this.ctx.lineCap="round";for(let r=0;r<6;r++){const s=(4*i+t.animationOffset+r*Math.PI/3)%(2*Math.PI),n=1.5*o,h=e+Math.cos(s)*o*.7,c=a+Math.sin(s)*o*.7,l=e+Math.cos(s)*n,d=a+Math.sin(s)*n,m=(h+l)/2+8*(Math.random()-.5),p=(c+d)/2+8*(Math.random()-.5);this.ctx.beginPath(),this.ctx.moveTo(h,c),this.ctx.lineTo(m,p),this.ctx.lineTo(l,d),this.ctx.stroke()}this.ctx.restore()}drawMissileProjectile(t,e,a,i,s){this.ctx.save(),this.drawProjectileTrail(t,"#FF8844",.8),this.ctx.translate(e,a),this.ctx.rotate(t.angle);const o=this.ctx.createLinearGradient(-8,-4,-8,4);o.addColorStop(0,"#FFAA88"),o.addColorStop(.5,"#FF8844"),o.addColorStop(1,"#CC6622"),this.ctx.fillStyle=o,this.ctx.fillRect(-8,-3,16,6),this.ctx.fillStyle="#FFFFFF",this.ctx.beginPath(),this.ctx.moveTo(8,0),this.ctx.lineTo(12,-2),this.ctx.lineTo(12,2),this.ctx.closePath(),this.ctx.fill(),this.ctx.fillStyle="#FF6622",this.ctx.beginPath(),this.ctx.moveTo(-8,-3),this.ctx.lineTo(-12,-5),this.ctx.lineTo(-10,-2),this.ctx.closePath(),this.ctx.fill(),this.ctx.beginPath(),this.ctx.moveTo(-8,3),this.ctx.lineTo(-12,5),this.ctx.lineTo(-10,2),this.ctx.closePath(),this.ctx.fill();const n=.3*Math.sin(12*i+t.animationOffset)+.7,h=this.ctx.createRadialGradient(-8,0,0,-15,0,8);h.addColorStop(0,"rgba(255, 255, 255, ".concat(n,")")),h.addColorStop(.3,"rgba(255, 136, 68, ".concat(.8*n,")")),h.addColorStop(.7,"rgba(255, 68, 68, ".concat(.6*n,")")),h.addColorStop(1,"transparent"),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.ellipse(-12,0,8*n,4*n,0,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}drawRailGunProjectile(t,e,a,i,s){this.ctx.save(),this.drawProjectileTrail(t,"#4444FF",.9);const o=this.ctx.createRadialGradient(e,a,0,e,a,16);o.addColorStop(0,"rgba(68, 68, 255, 0.8)"),o.addColorStop(.5,"rgba(68, 68, 255, 0.4)"),o.addColorStop(1,"transparent"),this.ctx.fillStyle=o,this.ctx.beginPath(),this.ctx.arc(e,a,16,0,2*Math.PI),this.ctx.fill(),this.ctx.strokeStyle="#8888FF",this.ctx.lineWidth=1;for(let h=0;h<6;h++){const t=(10*i+h*Math.PI/3)%(2*Math.PI),s=6,o=12.8;this.ctx.beginPath(),this.ctx.moveTo(e+Math.cos(t)*s,a+Math.sin(t)*s),this.ctx.lineTo(e+Math.cos(t)*o,a+Math.sin(t)*o),this.ctx.stroke()}const n=this.ctx.createRadialGradient(e,a,0,e,a,6);n.addColorStop(0,"#FFFFFF"),n.addColorStop(.7,"#AAAAFF"),n.addColorStop(1,"#4444FF"),this.ctx.fillStyle=n,this.ctx.beginPath(),this.ctx.arc(e,a,6,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="#FFFFFF",this.ctx.beginPath(),this.ctx.arc(e,a,6*.4,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}drawDefaultProjectile(t,e,a,i,s){if(t.isTracer)return void this.drawTracerRound(t,e,a,i,s);if(!isFinite(e)||!isFinite(a))return void console.warn("Invalid projectile coordinates:",e,a);const o=this.ctx.createRadialGradient(e,a,0,e,a,8);o.addColorStop(0,"#FFFFFF"),o.addColorStop(.7,"rgba(255, 255, 255, 0.5)"),o.addColorStop(1,"transparent"),this.ctx.fillStyle=o,this.ctx.beginPath(),this.ctx.arc(e,a,8,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="#FFFFFF",this.ctx.beginPath(),this.ctx.arc(e,a,4,0,2*Math.PI),this.ctx.fill()}drawTracerRound(t,e,a,i,s){if(!isFinite(e)||!isFinite(a))return void console.warn("Invalid tracer coordinates:",e,a);this.ctx.save();const o=Math.hypot(t.vx,t.vy),n=Math.min(2*o,40),h=Math.atan2(t.vy,t.vx),r=e-Math.cos(h)*n,c=a-Math.sin(h)*n,l=this.ctx.createLinearGradient(r,c,e,a);l.addColorStop(0,"rgba(255, 255, 0, 0)"),l.addColorStop(.3,"rgba(255, 255, 0, 0.3)"),l.addColorStop(.7,"rgba(255, 255, 0, 0.8)"),l.addColorStop(1,"rgba(255, 255, 255, 1)"),this.ctx.strokeStyle=l,this.ctx.lineWidth=4,this.ctx.lineCap="round",this.ctx.beginPath(),this.ctx.moveTo(r,c),this.ctx.lineTo(e,a),this.ctx.stroke(),this.ctx.fillStyle="#FFFFFF",this.ctx.shadowColor="#FFFF00",this.ctx.shadowBlur=8,this.ctx.beginPath(),this.ctx.arc(e,a,2,0,2*Math.PI),this.ctx.fill(),this.ctx.shadowBlur=15,this.ctx.fillStyle="#FFFF00",this.ctx.beginPath(),this.ctx.arc(e,a,4,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}drawProjectileTrail(t,e,a){if(t.trail&&!(t.trail.length<2)){this.ctx.save();for(let i=0;i<t.trail.length-1;i++){const s=t.trail[i],o=t.trail[i+1],n={x:s.x-this.camera.x,y:s.y-this.camera.y},h={x:o.x-this.camera.x,y:o.y-this.camera.y},r=i/t.trail.length*a,c=i/t.trail.length*6+1;this.ctx.strokeStyle=e.replace(")",", ".concat(r,")")).replace("rgb","rgba"),this.ctx.lineWidth=c,this.ctx.lineCap="round",this.ctx.beginPath(),this.ctx.moveTo(n.x,n.y),this.ctx.lineTo(h.x,h.y),this.ctx.stroke()}this.ctx.restore()}}drawGrid(){this.ctx.strokeStyle="#1a1a1a",this.ctx.lineWidth=1;const t=50,e=Math.floor(this.camera.x/t)*t,a=Math.floor(this.camera.y/t)*t;for(let i=e;i<this.camera.x+this.canvas.width;i+=t)this.ctx.beginPath(),this.ctx.moveTo(i-this.camera.x,0),this.ctx.lineTo(i-this.camera.x,this.canvas.height),this.ctx.stroke();for(let i=a;i<this.camera.y+this.canvas.height;i+=t)this.ctx.beginPath(),this.ctx.moveTo(0,i-this.camera.y),this.ctx.lineTo(this.canvas.width,i-this.camera.y),this.ctx.stroke()}drawFood(){this.food.forEach((t=>{const e=t.x-this.camera.x,a=t.y-this.camera.y;if(e>-20&&e<this.canvas.width+20&&a>-20&&a<this.canvas.height+20){let i=!1,s=null,o=1/0;if([this.player,...this.aiSnakes].filter((t=>t.alive)).forEach((e=>{const a=Math.hypot(t.x-e.x,t.y-e.y);a<3.5*e.size&&a>e.size+t.size&&(i=!0,a<o&&(o=a,s=e))})),i&&s&&this.drawVacuumTrail(t,s,e,a),i){const i=.005*Date.now(),s=3*t.size+Math.sin(3*i)*t.size,o=.4+.2*Math.sin(2*i),n=this.ctx.createRadialGradient(e,a,0,e,a,s);n.addColorStop(0,t.color),n.addColorStop(.3,this.addAlpha(t.color,o)),n.addColorStop(.7,this.addAlpha("#ffffff",.5*o)),n.addColorStop(1,"transparent"),this.ctx.fillStyle=n,this.ctx.beginPath(),this.ctx.arc(e,a,s,0,2*Math.PI),this.ctx.fill(),this.ctx.strokeStyle=this.addAlpha("#ffffff",o),this.ctx.lineWidth=1,this.ctx.setLineDash([2,2]),this.ctx.beginPath(),this.ctx.arc(e,a,.7*s,0,2*Math.PI),this.ctx.stroke(),this.ctx.setLineDash([])}const n=i?1.2*t.size:t.size,h=this.ctx.createRadialGradient(e,a,0,e,a,1.5*n);h.addColorStop(0,t.color),h.addColorStop(.7,this.addAlpha(t.color,.8)),h.addColorStop(1,"transparent"),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.arc(e,a,1.5*n,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle=t.color,this.ctx.beginPath(),this.ctx.arc(e,a,n,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle=this.addAlpha("#ffffff",.6),this.ctx.beginPath(),this.ctx.arc(e-.3*n,a-.3*n,.3*n,0,2*Math.PI),this.ctx.fill(),this.ctx.strokeStyle=i?"#ffffff":this.addAlpha(t.color,.8),this.ctx.lineWidth=i?2:1,this.ctx.beginPath(),this.ctx.arc(e,a,n,0,2*Math.PI),this.ctx.stroke()}}))}drawVacuumTrail(t,e,a,i){const s=e.x-this.camera.x,o=e.y-this.camera.y,n=s-a,h=o-i,r=Math.sqrt(n*n+h*h);if(0===r)return;const c=n/r,l=h/r,d=.01*Date.now();for(let p=0;p<6;p++){const e=(p/6+d%1)%1,s=a+c*r*e,o=i+l*r*e,n=1-e,h=2*n;h>.1&&(this.ctx.fillStyle=this.addAlpha(t.color,.8*n),this.ctx.beginPath(),this.ctx.arc(s,o,h,0,2*Math.PI),this.ctx.fill())}const m=.3+.2*Math.sin(.5*d);this.ctx.strokeStyle=this.addAlpha(e.color,m),this.ctx.lineWidth=2,this.ctx.setLineDash([5,3]),this.ctx.beginPath(),this.ctx.moveTo(a,i),this.ctx.lineTo(s,o),this.ctx.stroke(),this.ctx.setLineDash([])}drawGlowOrbs(){this.glowOrbs.forEach((t=>{const e=t.x-this.camera.x,a=t.y-this.camera.y;if(e>-50&&e<this.canvas.width+50&&a>-50&&a<this.canvas.height+50){const i=.001*Date.now(),s=t.size+4*Math.sin(t.glow),o="hsl(".concat(t.hue,", 100%, 70%)"),n=this.ctx.createRadialGradient(e,a,0,e,a,4*s);n.addColorStop(0,"hsla(".concat(t.hue,", 100%, 70%, 0.1)")),n.addColorStop(.5,"hsla(".concat(t.hue,", 100%, 70%, 0.05)")),n.addColorStop(1,"transparent"),this.ctx.fillStyle=n,this.ctx.beginPath(),this.ctx.arc(e,a,4*s,0,2*Math.PI),this.ctx.fill();const h=this.ctx.createRadialGradient(e,a,0,e,a,3*s);h.addColorStop(0,"hsla(".concat(t.hue,", 100%, 70%, 0.3)")),h.addColorStop(.5,"hsla(".concat(t.hue,", 100%, 70%, 0.2)")),h.addColorStop(1,"transparent"),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.arc(e,a,3*s,0,2*Math.PI),this.ctx.fill();const r=this.ctx.createRadialGradient(e,a,0,e,a,2*s);r.addColorStop(0,"hsla(".concat(t.hue,", 100%, 70%, 0.8)")),r.addColorStop(.6,"hsla(".concat(t.hue,", 100%, 70%, 0.4)")),r.addColorStop(1,"transparent"),this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(e,a,2*s,0,2*Math.PI),this.ctx.fill();const c=this.ctx.createRadialGradient(e,a,0,e,a,s);c.addColorStop(0,"#ffffff"),c.addColorStop(.5,o),c.addColorStop(1,"hsla(".concat(t.hue,", 100%, 70%, 0.7)")),this.ctx.fillStyle=c,this.ctx.beginPath(),this.ctx.arc(e,a,s,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="#ffffff";for(let g=0;g<12;g++){const o=(2*i+g*Math.PI/6)%(2*Math.PI),n=1.5*s,h=e+Math.cos(o)*n,r=a+Math.sin(o)*n,c=2+1*Math.sin(4*i+g);this.ctx.fillStyle="hsla(".concat(t.hue,", 100%, 90%, ").concat(.7+.3*Math.sin(3*i+g),")"),this.ctx.beginPath(),this.ctx.arc(h,r,c,0,2*Math.PI),this.ctx.fill()}for(let g=0;g<3;g++){const o=s*(1.5+.5*g),n=i*(1+g)*50;this.ctx.strokeStyle="hsla(".concat(t.hue,", 100%, 80%, ").concat(.4-.1*g,")"),this.ctx.lineWidth=2,this.ctx.setLineDash([10,10]),this.ctx.lineDashOffset=n,this.ctx.beginPath(),this.ctx.arc(e,a,o,0,2*Math.PI),this.ctx.stroke()}const l=(t.hue+20*i)%360,d="hsla(".concat(l,", 100%, 70%, 0.3)"),m=this.ctx.createRadialGradient(e,a,0,e,a,2.5*s);m.addColorStop(0,"transparent"),m.addColorStop(.5,d),m.addColorStop(1,"transparent"),this.ctx.fillStyle=m,this.ctx.beginPath(),this.ctx.arc(e,a,2.5*s,0,2*Math.PI),this.ctx.fill(),this.ctx.setLineDash([]);const p=this.ctx.createRadialGradient(e,a,0,e,a,.8*s);p.addColorStop(0,"hsla(".concat(t.hue,", 100%, 90%, 1)")),p.addColorStop(.5,"hsla(".concat(t.hue,", 100%, 70%, 0.8)")),p.addColorStop(1,"hsla(".concat(t.hue,", 100%, 50%, 0.4)")),this.ctx.fillStyle=p,this.ctx.beginPath(),this.ctx.arc(e,a,.8*s,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="hsla(".concat(t.hue,", 100%, 95%, 0.9)"),this.ctx.beginPath(),this.ctx.arc(e,a,.4*s,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="hsla(".concat(t.hue,", 100%, 30%, 0.8)"),this.ctx.font="".concat(.8*s,"px monospace"),this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText("\u26a1",e,a);for(let g=0;g<6;g++){const i=(t.glow+g*Math.PI/3)%(2*Math.PI),o=1.8*s,n=e+Math.cos(i)*o,h=a+Math.sin(i)*o;this.ctx.fillStyle="hsla(".concat(t.hue,", 100%, 80%, 0.8)"),this.ctx.beginPath(),this.ctx.arc(n,h,2,0,2*Math.PI),this.ctx.fill()}}}))}drawSnakes(){[this.player,...this.remotePlayers].filter((t=>t.alive)).forEach((t=>{this.drawRealisticSnake(t)}))}drawRealisticSnake(t){if(t.segments.length<2)return;const e=t.segments[0].x-this.camera.x,a=t.segments[0].y-this.camera.y;if(e<-200||e>this.canvas.width+200||a<-200||a>this.canvas.height+200)return;const i="function"===typeof t.isInvincible?t.isInvincible():t.isInvincible||!1;if(i&&Math.sin(t.blinkPhase||0)<0)this.drawWagerDisplay(t);else{if(i){const i=this.ctx.createRadialGradient(e,a,0,e,a,4*t.size);i.addColorStop(0,"rgba(255, 255, 255, 0.3)"),i.addColorStop(.5,"rgba(0, 255, 255, 0.2)"),i.addColorStop(1,"transparent"),this.ctx.fillStyle=i,this.ctx.beginPath(),this.ctx.arc(e,a,4*t.size,0,2*Math.PI),this.ctx.fill()}if(t===this.player&&this.boosting){const i=this.ctx.createRadialGradient(e,a,0,e,a,3*t.size);i.addColorStop(0,"#ffffff"),i.addColorStop(.3,t.color),i.addColorStop(1,"transparent"),this.ctx.fillStyle=i,this.ctx.beginPath(),this.ctx.arc(e,a,3*t.size,0,2*Math.PI),this.ctx.fill()}this.drawSmoothSnakeBody(t),this.drawSnakePattern(t),this.drawSnakeHead(t),this.drawWagerDisplay(t)}}drawSmoothSnakeBody(t){this.ctx.strokeStyle=t.color,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.lineWidth=2*t.size,this.ctx.beginPath();for(let s=1;s<t.segments.length;s++){const e=t.segments[s],a=e.x-this.camera.x,i=e.y-this.camera.y;1===s?this.ctx.moveTo(a,i):this.ctx.lineTo(a,i)}this.ctx.stroke();const e=t.segments[0],a=e.x-this.camera.x,i=e.y-this.camera.y;if(this.ctx.lineWidth=2.8*t.size,this.ctx.beginPath(),t.segments.length>1){const e=t.segments[1],s=e.x-this.camera.x,o=e.y-this.camera.y;this.ctx.moveTo(s,o),this.ctx.lineTo(a,i)}else this.ctx.moveTo(a,i),this.ctx.lineTo(a,i);this.ctx.stroke(),this.ctx.strokeStyle="#000000",this.ctx.lineWidth=1.6*t.size,this.ctx.beginPath();for(let s=1;s<t.segments.length;s++){const e=t.segments[s],a=e.x-this.camera.x,i=e.y-this.camera.y;1===s?this.ctx.moveTo(a,i):this.ctx.lineTo(a,i)}if(this.ctx.stroke(),this.ctx.lineWidth=2.4*t.size,this.ctx.beginPath(),t.segments.length>1){const e=t.segments[1],s=e.x-this.camera.x,o=e.y-this.camera.y;this.ctx.moveTo(s,o),this.ctx.lineTo(a,i)}else this.ctx.moveTo(a,i),this.ctx.lineTo(a,i);this.ctx.stroke();for(let s=0;s<t.segments.length;s++){const e=t.segments[s],a=e.x-this.camera.x,i=e.y-this.camera.y;if(a<-100||a>this.canvas.width+100||i<-100||i>this.canvas.height+100)continue;const o=0===s?.25*t.size:.15*t.size;this.ctx.fillStyle=t.color,this.ctx.beginPath(),this.ctx.arc(a,i,o,0,2*Math.PI),this.ctx.fill()}}drawSnakePattern(t){const e=.001*Date.now();for(let a=0;a<t.segments.length;a+=3){const i=t.segments[a],s=i.x-this.camera.x,o=i.y-this.camera.y;if(s<-100||s>this.canvas.width+100||o<-100||o>this.canvas.height+100)continue;const n=1-a/t.segments.length*.4,h=t.size*n*(2.5+.3*Math.sin(2*e+.1*a)),r=this.ctx.createRadialGradient(s,o,0,s,o,h);r.addColorStop(0,this.addAlpha(t.color,.2)),r.addColorStop(.5,this.addAlpha(t.color,.1)),r.addColorStop(1,"transparent"),this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(s,o,h,0,2*Math.PI),this.ctx.fill()}for(let a=0;a<t.segments.length-1;a+=2){const i=t.segments[a],s=i.x-this.camera.x,o=i.y-this.camera.y;if(s<-100||s>this.canvas.width+100||o<-100||o>this.canvas.height+100)continue;const n=1-a/t.segments.length*.4,h=.4*(t.size*n),r=t.angle+.1*a+.1*Math.sin(e+.2*a);this.ctx.save(),this.ctx.translate(s,o),this.ctx.rotate(r);const c=[];for(let t=0;t<6;t++){const e=t*Math.PI/3;c.push({x:Math.cos(e)*h,y:Math.sin(e)*h})}const l=this.ctx.createRadialGradient(.2*-h,.2*-h,0,0,0,h);l.addColorStop(0,"#ffffff"),l.addColorStop(.3,t.color),l.addColorStop(.6,this.darkenColor(t.color,.2)),l.addColorStop(.8,t.color),l.addColorStop(1,this.darkenColor(t.color,.3)),this.ctx.fillStyle=l,this.ctx.beginPath(),this.ctx.moveTo(c[0].x,c[0].y);for(let t=1;t<c.length;t++)this.ctx.lineTo(c[t].x,c[t].y);this.ctx.closePath(),this.ctx.fill();const d=.4*Math.max(0,Math.sin(3*e+.2*a));this.ctx.fillStyle=this.addAlpha("#ffffff",d),this.ctx.beginPath(),this.ctx.arc(.2*-h,.2*-h,.3*h,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}}drawSnakeHead(t){const e=t.segments[0],a=e.x-this.camera.x,i=e.y-this.camera.y;if(a<-100||a>this.canvas.width+100||i<-100||i>this.canvas.height+100)return;const s=.001*Date.now(),o=1.2*t.size,n=.3*o,h=.5*o,r=o*(3+.5*Math.sin(2*s)),c=this.ctx.createRadialGradient(a,i,0,a,i,r);c.addColorStop(0,this.addAlpha(t.color,.4)),c.addColorStop(.5,this.addAlpha(t.color,.2)),c.addColorStop(1,"transparent"),this.ctx.fillStyle=c,this.ctx.beginPath(),this.ctx.arc(a,i,r,0,2*Math.PI),this.ctx.fill();("function"===typeof t.hasActivePowerup?t.hasActivePowerup("battering_ram"):t.activePowerups&&t.activePowerups.some((t=>"battering_ram"===t.type)))&&this.drawBatteringRamEffect(t,a,i,o),this.drawActivePowerupEffects(t,a,i,o);const l=o*(1.5+.2*Math.sin(3*s)),d=this.ctx.createRadialGradient(a,i,.8*o,a,i,l);d.addColorStop(0,this.addAlpha(t.color,.5)),d.addColorStop(1,"transparent"),this.ctx.fillStyle=d,this.ctx.beginPath(),this.ctx.arc(a,i,l,0,2*Math.PI),this.ctx.fill();const m=t.angle,p=.5*o;for(let g=-1;g<=1;g+=2){const t=a+Math.cos(m+Math.PI/2)*p*g,e=i+Math.sin(m+Math.PI/2)*p*g,s=this.ctx.createRadialGradient(t,e,0,t,e,1.5*n);s.addColorStop(0,"rgba(0, 255, 255, 0.8)"),s.addColorStop(.5,"rgba(0, 255, 255, 0.4)"),s.addColorStop(1,"transparent"),this.ctx.fillStyle=s,this.ctx.beginPath(),this.ctx.arc(t,e,1.5*n,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="#00ffff",this.ctx.beginPath(),this.ctx.arc(t,e,n,0,2*Math.PI),this.ctx.fill();const o=.5*n,h=t+Math.cos(m)*n*.2,r=e+Math.sin(m)*n*.2,c=this.ctx.createRadialGradient(h,r,0,h,r,1.5*o);c.addColorStop(0,"#ff0000"),c.addColorStop(.5,"rgba(255, 0, 0, 0.5)"),c.addColorStop(1,"transparent"),this.ctx.fillStyle=c,this.ctx.beginPath(),this.ctx.arc(h,r,1.5*o,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="#ff0000",this.ctx.beginPath(),this.ctx.arc(h,r,o,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="rgba(255, 255, 255, 0.8)",this.ctx.beginPath(),this.ctx.arc(t-.2*n,e-.2*n,.1*n,0,2*Math.PI),this.ctx.fill()}if(Math.sin(4*s)>.7){const t=2*o,e=.15*o,s=m,n=a+Math.cos(s)*o,h=i+Math.sin(s)*o,r=n+Math.cos(s)*t,c=h+Math.sin(s)*t,l=.3*t;this.ctx.strokeStyle="#ff3366",this.ctx.lineWidth=e,this.ctx.lineCap="round",this.ctx.beginPath(),this.ctx.moveTo(n,h),this.ctx.lineTo(r,c),this.ctx.stroke();const d=Math.PI/4;for(let a=-1;a<=1;a+=2)this.ctx.beginPath(),this.ctx.moveTo(r,c),this.ctx.lineTo(r+Math.cos(s+d*a)*l,c+Math.sin(s+d*a)*l),this.ctx.stroke()}this.drawVacuumIndicator(t,a,i),this.currentKing===t&&this.drawCrown(t,a,i,o),this.ctx.fillStyle="#000",this.ctx.beginPath(),this.ctx.arc(.7*h,.6*-h,.6*n,0,2*Math.PI),this.ctx.fill(),this.ctx.beginPath(),this.ctx.arc(.7*h,.6*h,.6*n,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="#ffffff",this.ctx.beginPath(),this.ctx.arc(.7*h-.3*n,.6*-h-.3*n,.2*n,0,2*Math.PI),this.ctx.fill(),this.ctx.beginPath(),this.ctx.arc(.7*h-.3*n,.6*h-.3*n,.2*n,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle=this.darkenColor(t.color,.6),this.ctx.beginPath(),this.ctx.arc(.9*o,.2*-o,.08*o,0,2*Math.PI),this.ctx.fill(),this.ctx.beginPath(),this.ctx.arc(.9*o,.2*o,.08*o,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}drawBatteringRamEffect(t,e,a,i){Date.now();const s=t.angle,o=3*i,n=[];for(let d=0;d<8;d++){const t=d/8,h=o*t,r=e-Math.cos(s)*h,c=a-Math.sin(s)*h,l=i*(1-.8*t);n.push({x:r,y:c,size:l,progress:t})}this.ctx.save();const h=this.ctx.createLinearGradient(e,a,e-Math.cos(s)*o,a-Math.sin(s)*o);h.addColorStop(0,"#FF6600FF"),h.addColorStop(.3,"#FF9933AA"),h.addColorStop(.7,"#FFCC6666"),h.addColorStop(1,"transparent"),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.moveTo(e,a);const r=.8*i,c=s+Math.PI/2;this.ctx.lineTo(e+Math.cos(c)*r/2,a+Math.sin(c)*r/2),this.ctx.lineTo(e-Math.cos(s)*o+Math.cos(c)*r/4,a-Math.sin(s)*o+Math.sin(c)*r/4),this.ctx.lineTo(e-Math.cos(s)*o,a-Math.sin(s)*o),this.ctx.lineTo(e-Math.cos(s)*o-Math.cos(c)*r/4,a-Math.sin(s)*o-Math.sin(c)*r/4),this.ctx.lineTo(e-Math.cos(c)*r/2,a-Math.sin(c)*r/2),this.ctx.closePath(),this.ctx.fill();for(let d=0;d<6;d++){const t=s+(Math.random()-.5)*Math.PI/2,o=i*(1+2*Math.random()),n=e-Math.cos(t)*o,h=a-Math.sin(t)*o,r=2+3*Math.random();this.ctx.fillStyle="#FFAA00",this.ctx.beginPath(),this.ctx.arc(n,h,r,0,2*Math.PI),this.ctx.fill()}const l=this.ctx.createRadialGradient(e,a,0,e,a,2*i);l.addColorStop(0,"#FF660080"),l.addColorStop(.5,"#FF990040"),l.addColorStop(1,"transparent"),this.ctx.fillStyle=l,this.ctx.beginPath(),this.ctx.arc(e,a,2*i,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}drawHelmet(t,e,a,i){Date.now();const s=("function"===typeof t.getHelmetHealth?t.getHelmetHealth():500)/500,o=1.15*i;this.ctx.save();let n="#888888";s<.3?n="#AA4444":s<.6&&(n="#AAAA44");const h=this.ctx.createRadialGradient(e-.3*o,a-.3*o,0,e,a,o);h.addColorStop(0,"#FFFFFF"),h.addColorStop(.3,n),h.addColorStop(.7,this.darkenColor(n,.3)),h.addColorStop(1,this.darkenColor(n,.5)),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.arc(e,a,o,0,2*Math.PI),this.ctx.fill();const r=this.ctx.createRadialGradient(e,a-.2*o,0,e,a,.8*o);if(r.addColorStop(0,"#333333AA"),r.addColorStop(.5,"#555555AA"),r.addColorStop(1,"transparent"),this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(e,a,.8*o,0,Math.PI,!0),this.ctx.fill(),this.ctx.strokeStyle=this.darkenColor(n,.4),this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(e,a,o,0,2*Math.PI),this.ctx.stroke(),s<.8){this.ctx.strokeStyle="#222222",this.ctx.lineWidth=1;const t=Math.floor(5*(1-s));for(let i=0;i<t;i++){const t=Math.random()*Math.PI*2,i=o*(.3+.4*Math.random()),s=e+Math.cos(t)*o*.3,n=a+Math.sin(t)*o*.3,h=s+Math.cos(t+.5*(Math.random()-.5))*i,r=n+Math.sin(t+.5*(Math.random()-.5))*i;this.ctx.beginPath(),this.ctx.moveTo(s,n),this.ctx.lineTo(h,r),this.ctx.stroke()}}const c=1.5*o,l=e-c/2,d=a-o-15;this.ctx.fillStyle="#333333",this.ctx.fillRect(l,d,c,4);const m=s>.6?"#44AA44":s>.3?"#AAAA44":"#AA4444";this.ctx.fillStyle=m,this.ctx.fillRect(l,d,c*s,4),this.ctx.strokeStyle="#FFFFFF",this.ctx.lineWidth=1,this.ctx.strokeRect(l,d,c,4),this.ctx.restore()}drawCrown(t,e,a,i){const s=.8*i,o=a-1.5*i;this.ctx.save();const n=this.ctx.createLinearGradient(e-s,o-.2*s,e+s,o+.2*s);n.addColorStop(0,"#FFD700"),n.addColorStop(.5,"#FFF700"),n.addColorStop(1,"#FFD700"),this.ctx.fillStyle=n,this.ctx.fillRect(e-s,o,2*s,.4*s),this.ctx.beginPath();const h=2*s/5;for(let r=0;r<5;r++){const t=e-s+r*h,a=2===r?.8*s:.6*s;this.ctx.moveTo(t,o),this.ctx.lineTo(t+h/2,o-a),this.ctx.lineTo(t+h,o)}this.ctx.closePath(),this.ctx.fill();for(let r=0;r<3;r++){const t=e-.6*s+r*s*.6,a=o+.1*s;this.ctx.fillStyle="#FF0000",this.ctx.beginPath(),this.ctx.arc(t,a,.1*s,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="#FF6666",this.ctx.beginPath(),this.ctx.arc(t-.03*s,a-.03*s,.05*s,0,2*Math.PI),this.ctx.fill()}this.ctx.strokeStyle="#B8860B",this.ctx.lineWidth=2,this.ctx.strokeRect(e-s,o,2*s,.4*s),this.ctx.restore()}drawKingIndicator(){if(!this.currentKing||!this.player.alive||this.currentKing===this.player)return;const t=this.currentKing.x,e=this.currentKing.y,a=t-this.player.x,i=e-this.player.y,s=Math.sqrt(a*a+i*i);if(s<200)return;const o=Math.atan2(i,a),n=this.canvas.width/2,h=this.canvas.height/2,r=.8*Math.min(n,h),c=n+Math.cos(o)*r,l=h+Math.sin(o)*r;this.ctx.save();const d=20,m=.001*Date.now(),p=1+.2*Math.sin(3*m);this.ctx.fillStyle="#000000",this.ctx.strokeStyle="#FFD700",this.ctx.lineWidth=3,this.ctx.translate(c,l),this.ctx.rotate(o),this.ctx.scale(p,p),this.ctx.beginPath(),this.ctx.moveTo(d,0),this.ctx.lineTo(-10,-10),this.ctx.lineTo(-6,0),this.ctx.lineTo(-10,10),this.ctx.closePath(),this.ctx.fill(),this.ctx.stroke(),this.ctx.restore(),this.ctx.save(),this.ctx.translate(c,l);const g=12,x=30*Math.cos(o+Math.PI/2),y=30*Math.sin(o+Math.PI/2);this.ctx.fillStyle="#FFD700",this.ctx.fillRect(x-g,y-.3*g,24,.6*g),this.ctx.beginPath();for(let u=0;u<3;u++){const t=x-g+u*g*.8,e=1===u?.8*g:.6*g;this.ctx.moveTo(t,y-.3*g),this.ctx.lineTo(t+.4*g,y-.3*g-e),this.ctx.lineTo(t+.8*g,y-.3*g)}this.ctx.closePath(),this.ctx.fill();const f="".concat(Math.floor(s),"m");this.ctx.fillStyle="#FFFFFF",this.ctx.font="12px monospace",this.ctx.textAlign="center",this.ctx.fillText(f,x,y+g+15),this.ctx.restore()}drawActivePowerupEffects(t,e,a,i){(t.activePowerups||[]).forEach((s=>{switch(s.type){case"helmet":this.drawHelmet(t,e,a,i);break;case"forcefield":this.drawForcefieldEffect(t,e,a,i);break;case"armor_plating":this.drawArmorPlatingEffect(t,e,a,i);break;case"shield_generator":this.drawShieldGeneratorEffect(t,e,a,i)}})),this.drawPowerupStatusIndicators(t,e,a,i)}drawForcefieldEffect(t,e,a,i){const s=.001*Date.now(),o=2.5*i;this.ctx.save();const n=2*s;for(let h=0;h<3;h++){const t=o*(.8+.1*h),i=.3-.1*h;this.ctx.save(),this.ctx.translate(e,a),this.ctx.rotate(n+h*Math.PI/3),this.ctx.strokeStyle="rgba(0, 255, 255, ".concat(i,")"),this.ctx.lineWidth=3,this.ctx.setLineDash([10,5]),this.ctx.lineDashOffset=20*s,this.ctx.beginPath();for(let e=0;e<6;e++){const a=e/6*Math.PI*2,i=Math.cos(a)*t,s=Math.sin(a)*t;0===e?this.ctx.moveTo(i,s):this.ctx.lineTo(i,s)}this.ctx.closePath(),this.ctx.stroke(),this.ctx.restore()}for(let h=0;h<8;h++){const t=h/8*Math.PI*2+s,i=.9*o,n=e+Math.cos(t)*i,r=a+Math.sin(t)*i,c=this.ctx.createRadialGradient(n,r,0,n,r,8);c.addColorStop(0,"#00FFFF"),c.addColorStop(1,"transparent"),this.ctx.fillStyle=c,this.ctx.beginPath(),this.ctx.arc(n,r,8,0,2*Math.PI),this.ctx.fill()}this.ctx.restore()}drawArmorPlatingEffect(t,e,a,i){const s=.001*Date.now();this.ctx.save();const o=.4*i,n=1.8*i;for(let h=0;h<8;h++){const t=h/8*Math.PI*2+.5*s,i=e+Math.cos(t)*n,r=a+Math.sin(t)*n;this.ctx.save(),this.ctx.translate(i,r),this.ctx.rotate(t+Math.PI/2);const c=this.ctx.createLinearGradient(-o,-o,o,o);c.addColorStop(0,"#CCCCCC"),c.addColorStop(.5,"#888888"),c.addColorStop(1,"#444444"),this.ctx.fillStyle=c,this.ctx.strokeStyle="#FFFFFF",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.rect(-o/2,-o,o,2*o),this.ctx.fill(),this.ctx.stroke(),this.ctx.fillStyle="#AAAAAA",this.ctx.beginPath(),this.ctx.arc(0,.5*-o,2,0,2*Math.PI),this.ctx.fill(),this.ctx.beginPath(),this.ctx.arc(0,.5*o,2,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}this.ctx.restore()}drawShieldGeneratorEffect(t,e,a,i){const s=.001*Date.now(),o=3*i;this.ctx.save();const n=.7+.3*Math.sin(4*s),h=this.ctx.createRadialGradient(e,a,0,e,a,o);h.addColorStop(0,"transparent"),h.addColorStop(.8,"rgba(255, 255, 0, ".concat(.1*n,")")),h.addColorStop(.95,"rgba(255, 255, 0, ".concat(.3*n,")")),h.addColorStop(1,"transparent"),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.arc(e,a,o,0,2*Math.PI),this.ctx.fill();for(let c=0;c<3;c++){const t=2*s+c*Math.PI/3,i=o*(.3+.35*(Math.sin(t)+1)),n=.5*Math.max(0,Math.sin(t));this.ctx.strokeStyle="rgba(255, 255, 0, ".concat(n,")"),this.ctx.lineWidth=4,this.ctx.beginPath(),this.ctx.arc(e,a,i,0,2*Math.PI),this.ctx.stroke()}const r=this.ctx.createRadialGradient(e,a,0,e,a,.5*i);r.addColorStop(0,"#FFFF00"),r.addColorStop(.5,"#FFAA00"),r.addColorStop(1,"transparent"),this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(e,a,.5*i,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}drawPowerupStatusIndicators(t,e,a,i){const s=t.activePowerups||[];if(0===s.length)return;const o=.001*Date.now(),n=a-2.5*i;let h=e-15*s.length/2;this.ctx.save(),s.forEach(((t,e)=>{const a=(t.expirationTime-Date.now())/t.duration;this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(h-8,n-8,16,16);let i="#FFFFFF";switch(t.type){case"helmet":i="#888888";break;case"forcefield":i="#00FFFF";break;case"armor_plating":i="#CCCCCC";break;case"battering_ram":i="#FF6600";break;case"shield_generator":i="#FFFF00"}if(a<.3){const t=.5+.5*Math.sin(10*o);i=this.addAlpha(i,t)}this.ctx.fillStyle=i,this.ctx.beginPath(),this.ctx.arc(h,n,6,0,2*Math.PI),this.ctx.fill();const s=h-6,r=n+10;this.ctx.fillStyle="#333333",this.ctx.fillRect(s,r,12,2);const c=a>.5?"#44AA44":a>.2?"#AAAA44":"#AA4444";this.ctx.fillStyle=c,this.ctx.fillRect(s,r,12*a,2),h+=30})),this.ctx.restore()}drawVacuumIndicator(t,e,a){const i=3.5*t.size,s=.003*Date.now(),o=.5+.3*Math.sin(2*s),n=.1+.1*o;this.ctx.strokeStyle=this.addAlpha(t.color,n),this.ctx.lineWidth=2,this.ctx.setLineDash([5,5]),this.ctx.beginPath(),this.ctx.arc(e,a,i*o,0,2*Math.PI),this.ctx.stroke(),this.ctx.setLineDash([]);const h=this.ctx.createRadialGradient(e,a,0,e,a,i);h.addColorStop(0,"transparent"),h.addColorStop(.7,"transparent"),h.addColorStop(.9,this.addAlpha(t.color,.5*n)),h.addColorStop(1,"transparent"),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.arc(e,a,i,0,2*Math.PI),this.ctx.fill()}drawWagerDisplay(t){const e=t.segments[0].x-this.camera.x,a=t.segments[0].y-this.camera.y;if(e<-100||e>this.canvas.width+100||a<-100||a>this.canvas.height+100)return;const i=t.isPlayer?this.cashBalance:t.collectedCash||0,s=parseFloat(i.toFixed(2)),o=a-t.size-30;this.drawBountyChip(e,o,s,t.isPlayer)}drawBountyChip(t,e,a,i){const s="$".concat(a.toFixed(2)),o=20*Math.min(1.5,Math.max(.8,.3*Math.log10(a+1))),n=.001*Date.now(),h=.1*Math.sin(2*n)+1,r=.3*Math.sin(3*n)+.7;this.ctx.save(),this.ctx.shadowColor="rgba(0, 0, 0, 0.6)",this.ctx.shadowBlur=8,this.ctx.shadowOffsetX=2,this.ctx.shadowOffsetY=2;const c=this.ctx.createRadialGradient(t,e,.7*o,t,e,1.4*o),l=i?"#4CAF50":"#F44336";c.addColorStop(0,this.addAlpha(l,.4*r)),c.addColorStop(1,"transparent"),this.ctx.fillStyle=c,this.ctx.beginPath(),this.ctx.arc(t,e,1.4*o,0,2*Math.PI),this.ctx.fill(),this.ctx.shadowColor="transparent",this.ctx.shadowBlur=0,this.ctx.shadowOffsetX=0,this.ctx.shadowOffsetY=0;const d=this.ctx.createRadialGradient(t-.3*o,e-.3*o,0,t,e,o);i?(d.addColorStop(0,"#81C784"),d.addColorStop(.7,"#4CAF50"),d.addColorStop(1,"#2E7D32")):(d.addColorStop(0,"#EF5350"),d.addColorStop(.7,"#F44336"),d.addColorStop(1,"#C62828")),this.ctx.fillStyle=d,this.ctx.beginPath(),this.ctx.arc(t,e,o*h,0,2*Math.PI),this.ctx.fill(),this.ctx.strokeStyle=i?"#A5D6A7":"#FFAB91",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t,e,.8*o*h,0,2*Math.PI),this.ctx.stroke(),this.ctx.strokeStyle=i?"#66BB6A":"#FF7043",this.ctx.lineWidth=3,this.ctx.shadowColor=i?"#4CAF50":"#F44336",this.ctx.shadowBlur=6*r,this.ctx.beginPath(),this.ctx.arc(t,e,o*h,0,2*Math.PI),this.ctx.stroke(),this.ctx.shadowColor="transparent",this.ctx.shadowBlur=0;const m=Math.max(10,.6*o);this.ctx.font="bold ".concat(m,"px 'Orbitron', monospace"),this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillText(s,t+1,e+1),this.ctx.fillStyle="#FFFFFF",this.ctx.shadowColor="#FFFFFF",this.ctx.shadowBlur=4,this.ctx.fillText(s,t,e),this.ctx.shadowColor="transparent",this.ctx.shadowBlur=0;const p=.9*o;this.ctx.fillStyle=i?"#2E7D32":"#C62828";for(let g=0;g<8;g++){const a=g/8*Math.PI*2,i=t+Math.cos(a)*p,s=e+Math.sin(a)*p;this.ctx.beginPath(),this.ctx.arc(i,s,1.5,0,2*Math.PI),this.ctx.fill()}this.ctx.restore()}darkenColor(t,e){if(t.startsWith("#")){const a=parseInt(t.slice(1),16),i=Math.max(0,Math.floor((a>>16)*(1-e))),s=Math.max(0,Math.floor((a>>8&255)*(1-e))),o=Math.max(0,Math.floor((255&a)*(1-e)));return"rgb(".concat(i,", ").concat(s,", ").concat(o,")")}return t}addAlpha(t,e){if(t.startsWith("hsl("))return t.replace("hsl(","hsla(").replace(")",", ".concat(e,")"));if(t.startsWith("#")){const a=parseInt(t.slice(1),16),i=a>>8&255,s=255&a;return"rgba(".concat(a>>16&255,", ").concat(i,", ").concat(s,", ").concat(e,")")}return t.startsWith("rgb(")?t.replace("rgb(","rgba(").replace(")",", ".concat(e,")")):t}drawDebugInfo(){this.player&&(this.ctx.fillStyle="#fff",this.ctx.font="16px Arial",this.ctx.fillText("Player: ".concat(Math.round(this.player.x),", ").concat(Math.round(this.player.y)),10,this.canvas.height-60),this.ctx.fillText("Camera: ".concat(Math.round(this.camera.x),", ").concat(Math.round(this.camera.y)),10,this.canvas.height-40),this.ctx.fillText("Food: ".concat(this.food.length,", Orbs: ").concat(this.glowOrbs.length),10,this.canvas.height-20))}drawMinimap(){if(!this.minimapCtx||!this.minimap)return void(Math.random()<.001&&console.log("Minimap not available - ctx:",!!this.minimapCtx,"canvas:",!!this.minimap));this.minimapCtx.fillStyle="#0a0a0a",this.minimapCtx.fillRect(0,0,this.minimap.width,this.minimap.height);const t=this.minimap.width/this.worldWidth,e=this.minimap.height/this.worldHeight;this.minimapCtx.strokeStyle="#444",this.minimapCtx.lineWidth=2,this.minimapCtx.strokeRect(0,0,this.minimap.width,this.minimap.height);this.food.filter(((t,e)=>e%10===0)).forEach((a=>{const i=a.x*t,s=a.y*e;this.minimapCtx.fillStyle="rgba(255, 255, 255, 0.3)",this.minimapCtx.beginPath(),this.minimapCtx.arc(i,s,.5,0,2*Math.PI),this.minimapCtx.fill()})),this.glowOrbs.forEach((a=>{const i=a.x*t,s=a.y*e,o=.5*Math.sin(.005*Date.now())+1;this.minimapCtx.shadowColor="#FFD700",this.minimapCtx.shadowBlur=3*o,this.minimapCtx.fillStyle="#FFD700",this.minimapCtx.beginPath(),this.minimapCtx.arc(i,s,1.5*o,0,2*Math.PI),this.minimapCtx.fill(),this.minimapCtx.shadowBlur=0})),"warfare"===this.gameMode&&this.weapons&&this.weapons.forEach((a=>{const i=a.x*t,s=a.y*e;this.minimapCtx.fillStyle="#FF6B35",this.minimapCtx.beginPath(),this.minimapCtx.arc(i,s,1,0,2*Math.PI),this.minimapCtx.fill()})),"warfare"===this.gameMode&&this.projectiles&&this.projectiles.forEach((a=>{const i=a.x*t,s=a.y*e;this.minimapCtx.fillStyle="#FF0000",this.minimapCtx.beginPath(),this.minimapCtx.arc(i,s,.5,0,2*Math.PI),this.minimapCtx.fill()}));const a=this.remotePlayers.filter((t=>t.alive));if(console.log("Total remote players: ".concat(this.remotePlayers.length,", Alive remote players: ").concat(a.length)),a.forEach((a=>{const i=a.x*t,s=a.y*e,o=Math.max(3,Math.min(7,.2*a.segments.length+3));this.minimapCtx.shadowColor=a.color,this.minimapCtx.shadowBlur=6,this.minimapCtx.fillStyle=a.color,this.minimapCtx.beginPath(),this.minimapCtx.arc(i,s,o,0,2*Math.PI),this.minimapCtx.fill();const n=i+Math.cos(a.angle||0)*(o+3),h=s+Math.sin(a.angle||0)*(o+3);this.minimapCtx.fillStyle="#FFFFFF",this.minimapCtx.beginPath(),this.minimapCtx.arc(n,h,.4*o,0,2*Math.PI),this.minimapCtx.fill(),a.username&&(this.minimapCtx.fillStyle="#FFFFFF",this.minimapCtx.font="8px Arial",this.minimapCtx.textAlign="center",this.minimapCtx.fillText(a.username.substring(0,3),i,s-o-5)),this.minimapCtx.shadowBlur=0})),this.player&&this.player.alive){const a=this.player.x*t,i=this.player.y*e,s=Math.max(2,Math.min(5,.1*this.player.segments.length+2));this.minimapCtx.shadowColor="#4CAF50",this.minimapCtx.shadowBlur=5,this.minimapCtx.fillStyle="#4CAF50",this.minimapCtx.beginPath(),this.minimapCtx.arc(a,i,s,0,2*Math.PI),this.minimapCtx.fill();const o=a+Math.cos(this.player.angle)*(s+2),n=i+Math.sin(this.player.angle)*(s+2);this.minimapCtx.strokeStyle="#81C784",this.minimapCtx.lineWidth=2,this.minimapCtx.beginPath(),this.minimapCtx.moveTo(a,i),this.minimapCtx.lineTo(o,n),this.minimapCtx.stroke(),this.minimapCtx.shadowBlur=0}const i=this.camera.x*t,s=this.camera.y*e,o=this.canvas.width*t,n=this.canvas.height*e;this.minimapCtx.strokeStyle="rgba(76, 175, 80, 0.8)",this.minimapCtx.lineWidth=1,this.minimapCtx.setLineDash([2,2]),this.minimapCtx.strokeRect(i,s,o,n),this.minimapCtx.setLineDash([]),this.minimapCtx.fillStyle="#fff",this.minimapCtx.font="10px monospace",this.minimapCtx.textAlign="center",this.minimapCtx.fillText("RADAR",this.minimap.width/2,12);let h=this.minimap.height-25;this.minimapCtx.font="8px monospace",this.minimapCtx.textAlign="left",this.minimapCtx.fillStyle="#4CAF50",this.minimapCtx.beginPath(),this.minimapCtx.arc(10,h,2,0,2*Math.PI),this.minimapCtx.fill(),this.minimapCtx.fillStyle="#fff",this.minimapCtx.fillText("YOU",16,h+3),this.minimapCtx.fillStyle="#f44336",this.minimapCtx.beginPath(),this.minimapCtx.arc(50,h,2,0,2*Math.PI),this.minimapCtx.fill(),this.minimapCtx.fillStyle="#fff",this.minimapCtx.fillText("PLAYERS",56,h+3),this.minimapCtx.fillStyle="#FFD700",this.minimapCtx.beginPath(),this.minimapCtx.arc(80,h,2,0,2*Math.PI),this.minimapCtx.fill(),this.minimapCtx.fillStyle="#fff",this.minimapCtx.fillText("ORBS",86,h+3),"warfare"===this.gameMode&&(this.minimapCtx.fillStyle="#FF6B35",this.minimapCtx.beginPath(),this.minimapCtx.arc(130,h,2,0,2*Math.PI),this.minimapCtx.fill(),this.minimapCtx.fillStyle="#fff",this.minimapCtx.fillText("WEAPONS",136,h+3),h+=12,this.minimapCtx.fillStyle="#44FF44",this.minimapCtx.beginPath(),this.minimapCtx.arc(130,h,2,0,2*Math.PI),this.minimapCtx.fill(),this.minimapCtx.fillStyle="#fff",this.minimapCtx.fillText("AMMO",136,h+3))}gameLoop(){this.gameRunning&&(this.update(),this.render()),requestAnimationFrame((()=>this.gameLoop()))}async start(){this.setupEventListeners(),this.isMultiplayer&&await this.initializeMultiplayer(),this.restart(),this.gameLoop()}setMinimapCanvas(t){console.log("Setting minimap canvas:",t),this.minimap=t,this.minimapCtx=t.getContext("2d"),this.minimap.width=250,this.minimap.height=200,console.log("Minimap setup complete:",{canvas:!!this.minimap,ctx:!!this.minimapCtx,width:this.minimap.width,height:this.minimap.height})}restart(){console.log("\ud83d\udd04\ud83d\udd04\ud83d\udd04 RESTART METHOD CALLED \ud83d\udd04\ud83d\udd04\ud83d\udd04"),this.gameRunning=!0,this.score=0,this.cashBalance=0,this.camera={x:1500,y:1500},this.weaponInventory={primaryWeapon:null,secondaryWeapon:null,sidearm:new h(0,0,"sidearm"),currentSlot:"sidearm"},this.currentWeapon=this.weaponInventory.sidearm,this.lastWeaponSlot="sidearm",this.currentWeaponIndex=0,this.lastShotTime=0,this.projectiles=[],this.ammoInventory={light_energy:0,medium_energy:0,heavy_energy:0,light_plasma:0,medium_plasma:0,heavy_plasma:0,missiles:0,rail_slugs:0},this.powerups=[],this.cashedOut=!1,this.spectating=!1,this.player=new d(2e3,2e3,"#4CAF50",!0),this.player.gameInstance=this,this.player.speedMultiplier=1,this.player.boostCapRemoved=!1,this.player.boost=100,this.player.alive=!0,this.player.segments=[{x:2e3,y:2e3,health:100,maxHealth:100}],this.player.growthQueue=0,this.player.activateSpawnInvincibility(this.playerWager),this.playerWager=50,this.player.wager=this.playerWager,this.cashBalance=this.playerWager,console.log("Player initialized with",this.player.segments.length,"segments and $"+this.cashBalance+" cash balance"),"classic"===this.gameMode?this.score=0:this.score=this.cashBalance,this.aiSnakes=[],console.log("\ud83d\udd04 Multiplayer restart - AI snakes remain disabled"),this.food=[],this.glowOrbs=[],this.weapons=[],this.generateFood(),this.generateGlowOrbs()}cashOut(){if(this.cashedOut||!this.player.alive)return;const t=this.playerWager||50;this.cashBalance<=t?console.log("Cannot cash out: Current balance $".concat(this.cashBalance," is not greater than initial wager $").concat(t)):(console.log("Player cashing out with $".concat(this.cashBalance," (profit: $").concat(this.cashBalance-t,")")),this.cashedOut=!0,this.cashoutBalance=this.cashBalance,this.spectating=!0,this.player.alive=!1,this.onStateUpdate&&this.onStateUpdate({score:this.score,cashBalance:this.cashBalance,length:this.player.length,boost:this.player.boost,weapon:this.currentWeapon?this.currentWeapon.name:"None",weaponAmmo:this.currentWeapon?this.currentWeapon.maxAmmo===1/0?"\u221e":"".concat(this.currentWeapon.currentAmmo,"/").concat(this.currentWeapon.maxAmmo):"0/0",cooldown:"Ready",isGameOver:!0,finalScore:this.score,finalLength:this.player.length,cashedOut:!0,cashoutAmount:this.cashoutBalance}))}cycleThroughSnakes(){if(!this.spectating)return;const t=this.remotePlayers.filter((t=>t.alive));if(0===t.length)return;this.spectateTarget=(this.spectateTarget+1)%t.length;const e=t[this.spectateTarget];this.camera.x=e.x-this.canvas.width/2,this.camera.y=e.y-this.canvas.height/2}async initializeMultiplayer(){if(this.isMultiplayer&&this.multiplayerService)try{console.log("\ud83c\udf10 Multiplayer service connected to game instance"),this.multiplayerService.playerId&&(this.playerId=this.multiplayerService.playerId)}catch(t){console.error("\u274c Failed to initialize multiplayer service:",t)}else console.log("\ud83c\udf10 Multiplayer service already connected or not needed")}updateRemotePlayers(){this.remotePlayers.forEach((t=>{t.alive&&(this.interpolatePlayerPosition(t),t.segments&&t.segments.length>0&&this.updateRemotePlayerSegments(t))}))}interpolatePlayerPosition(t){if(void 0!==t.targetX&&void 0!==t.targetY){const e=.1;t.x+=(t.targetX-t.x)*e,t.y+=(t.targetY-t.y)*e}}updateRemotePlayerSegments(t){if(t.segments.length>1)for(let e=1;e<t.segments.length;e++){const a=t.segments[e-1],i=t.segments[e],s=a.x-i.x,o=a.y-i.y,n=Math.sqrt(s*s+o*o);if(n>t.segmentDistance){const e=t.segmentDistance/n;i.x=a.x-s*e,i.y=a.y-o*e}}}broadcastGameEvent(t,e){this.multiplayerService&&this.isMultiplayer&&this.multiplayerService.broadcastGameEvent({type:t,playerId:this.playerId,data:e,timestamp:Date.now()})}initializeGamepadSupport(){"getGamepads"in navigator?(console.log("Initializing gamepad support..."),this.gamepads={},this.deadzone=.15,this.buttonStates={},this.previousButtonStates={},this.controllerMapping={buttons:{A:0,B:1,X:2,Y:3,LB:4,RB:5,LT:6,RT:7,Back:8,Start:9,LS:10,RS:11,DPadUp:12,DPadDown:13,DPadLeft:14,DPadRight:15},axes:{LeftStickX:0,LeftStickY:1,RightStickX:2,RightStickY:3}},window.addEventListener("gamepadconnected",(t=>{console.log("\ud83c\udfae Gamepad connected:",t.gamepad.id),console.log("\ud83c\udfae Gamepad details:",{id:t.gamepad.id,index:t.gamepad.index,buttons:t.gamepad.buttons.length,axes:t.gamepad.axes.length}),this.addGamepad(t.gamepad)})),window.addEventListener("gamepaddisconnected",(t=>{console.log("\ud83c\udfae Gamepad disconnected:",t.gamepad.id),this.removeGamepad(t.gamepad)})),this.startGamepadPolling(),console.log("Gamepad support initialized successfully"),this.checkExistingGamepads()):console.log("Gamepad API not supported")}checkExistingGamepads(){console.log("\ud83c\udfae Checking for existing gamepads...");const t=navigator.getGamepads();let e=0;for(let a=0;a<t.length;a++)t[a]&&(console.log("\ud83c\udfae Found existing gamepad:",{index:a,id:t[a].id,connected:t[a].connected}),this.addGamepad(t[a]),e++);0===e?console.log("\ud83c\udfae No gamepads currently connected. Connect a gamepad and press any button to activate it."):console.log("\ud83c\udfae Found ".concat(e," connected gamepad(s)"))}addGamepad(t){console.log("\ud83c\udfae Adding gamepad to tracking:",t.index),this.gamepads[t.index]=t,this.buttonStates[t.index]={},this.previousButtonStates[t.index]={},console.log("\ud83c\udfae Total gamepads tracked:",Object.keys(this.gamepads).length)}removeGamepad(t){delete this.gamepads[t.index],delete this.buttonStates[t.index],delete this.previousButtonStates[t.index]}startGamepadPolling(){const t=()=>{this.updateGamepads(),requestAnimationFrame(t)};t()}updateGamepads(){const t=navigator.getGamepads();for(let e=0;e<t.length;e++){const a=t[e];a&&this.gamepads[e]&&this.handleGamepadInput(a)}}handleGamepadInput(t){this.previousButtonStates[t.index]=(0,i.A)({},this.buttonStates[t.index]);for(let i=0;i<t.buttons.length;i++)this.buttonStates[t.index][i]=t.buttons[i].pressed;const e=t.axes[this.controllerMapping.axes.LeftStickX],a=t.axes[this.controllerMapping.axes.LeftStickY];if(Math.abs(e)>this.deadzone||Math.abs(a)>this.deadzone){Math.random()<.01&&console.log("\ud83c\udfae Gamepad movement:",{leftX:e.toFixed(2),leftY:a.toFixed(2)});const t=this.player.x+200*e,i=this.player.y+200*a;this.mouse.x=t-this.camera.x,this.mouse.y=i-this.camera.y}const s=this.controllerMapping.buttons.A,o=this.boosting;this.boosting=this.isButtonPressed(t.index,s),this.boosting&&!o&&console.log("\ud83c\udfae Boost button pressed");const n=this.controllerMapping.buttons.RT;this.isButtonJustPressed(t.index,n)&&!this.player.isInvincible()&&(console.log("\ud83c\udfae Shoot button pressed"),this.shoot()),this.isButtonJustPressed(t.index,this.controllerMapping.buttons.LB)&&this.switchToWeapon("primaryWeapon"),this.isButtonJustPressed(t.index,this.controllerMapping.buttons.RB)&&this.switchToWeapon("secondaryWeapon"),this.isButtonJustPressed(t.index,this.controllerMapping.buttons.LT)&&this.switchToWeapon("sidearm");const h=this.controllerMapping.buttons.X;this.isButtonJustPressed(t.index,h)&&this.cashOut();const r=this.controllerMapping.buttons.Y;this.isButtonJustPressed(t.index,r)&&this.cycleThroughSnakes()}isButtonPressed(t,e){return this.buttonStates[t]&&this.buttonStates[t][e]}isButtonJustPressed(t,e){const a=this.buttonStates[t]&&this.buttonStates[t][e],i=this.previousButtonStates[t]&&this.previousButtonStates[t][e];return a&&!i}destroy(){console.log("Destroying game..."),this.gameRunning=!1,this.gamepads&&(this.gamepads={},this.buttonStates={},this.previousButtonStates={})}canShoot(){return Date.now()-this.lastShotTime>this.weaponCooldown}updateGameState(){if(this.gameRunning){if(this.onStateUpdate){const t=this.currentWeapon?Math.max(0,this.currentWeapon.fireRate-(Date.now()-this.currentWeapon.lastShotTime)):0,e=t>0?"Cooldown: ".concat((t/1e3).toFixed(1),"s"):"Ready",a=this.currentWeapon&&this.currentWeapon.fireRate>0?Math.max(0,100-t/this.currentWeapon.fireRate*100):100,i={primary:this.weaponInventory.primaryWeapon?"".concat(this.weaponInventory.primaryWeapon.name," (").concat(this.weaponInventory.primaryWeapon.currentAmmo,"/").concat(this.weaponInventory.primaryWeapon.maxAmmo,")"):"Empty",secondary:this.weaponInventory.secondaryWeapon?"".concat(this.weaponInventory.secondaryWeapon.name," (").concat(this.weaponInventory.secondaryWeapon.currentAmmo,"/").concat(this.weaponInventory.secondaryWeapon.maxAmmo,")"):"Empty",sidearm:"".concat(this.weaponInventory.sidearm.name," (\u221e)")},s=this.getAmmoInventory();this.onStateUpdate({score:this.score,cashBalance:this.cashBalance,length:this.player.length,boost:this.player.boost,weapon:this.currentWeapon?this.currentWeapon.name:"None",weaponAmmo:this.currentWeapon?this.currentWeapon.maxAmmo===1/0?"\u221e":"".concat(this.currentWeapon.currentAmmo,"/").concat(this.currentWeapon.maxAmmo):"0/0",weaponTier:this.currentWeapon?"Tier ".concat(this.currentWeapon.tier):"None",weaponSlots:i,currentSlot:this.weaponInventory.currentSlot,cooldown:this.currentWeapon&&this.currentWeapon.canShoot()?"Ready":e,cooldownProgress:a,ammoInventory:s,isGameOver:!this.gameRunning||this.cashedOut,finalScore:"warfare"===this.gameMode?this.cashBalance:this.score,finalLength:this.player.length,cashedOut:this.cashedOut,cashoutAmount:this.cashoutBalance})}}else console.log("Skipping updateGameState - game is not running")}}class d{constructor(t,e,a){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.x=t,this.y=e,this.color=a,this.isPlayer=i,this.baseSize=8,this.speed=4,this.baseSpeed=4,this.speedMultiplier=1,this.angle=Math.random()*Math.PI*2,this.targetAngle=this.angle,this.alive=!0,this.boost=100,this.maxBoost=100,this.boostCapRemoved=!1,this.segments=[{x:t,y:e,health:100,maxHealth:100}],this.pathHistory=[{x:t,y:e}],this.maxPathLength=1e3,this.pathRecordDistance=2,this.growthProgress=0,this.growthRate=.02,this.invincible=!1,this.invincibilityEndTime=0,this.blinkPhase=0,this.shrinkProgress=0,this.growthQueue=0,i||(this.weaponInventory={primaryWeapon:null,secondaryWeapon:null,sidearm:new h(0,0,"sidearm"),currentSlot:"sidearm"},this.currentWeapon=this.weaponInventory.sidearm,this.lastWeaponSlot="sidearm",this.ammoInventory={light_energy:0,heavy_energy:0,plasma_cells:0,heavy_plasma:0,rockets:0,rail_slugs:0},this.aiPersonality=this.generateAIPersonality(),this.lastShotTime=0,this.targetEnemy=null,this.combatState="hunting",this.lastStateChange=Date.now(),this.threatLevel=0,this.aggressionLevel=.5*Math.random()+.3,this.accuracy=.6+.3*Math.random(),this.reactionTime=200+300*Math.random(),this.lastDecisionTime=0,this.patrolTarget={x:t,y:e},this.lastKnownEnemyPos=null,this.weaponPreference=this.generateWeaponPreference()),this.activePowerups=[],this.powerupInventory=[],this.wager=0,this.cashValue=0}get size(){const t=this.isPlayer?this.gameInstance?this.gameInstance.cashBalance:50:this.collectedCash||50,e=Math.sqrt(t/10);return this.baseSize+2*e}getGame(){return this.gameInstance}get length(){return this.segments.length}getTargetLength(){const t=this.isPlayer?this.gameInstance?this.gameInstance.cashBalance:50:this.collectedCash||50,e=1+Math.floor(t/10);return Math.max(1,e)}get segmentDistance(){return 1.2*this.size}update(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this.alive)return;let e=this.targetAngle-this.angle;for(;e>Math.PI;)e-=2*Math.PI;for(;e<-Math.PI;)e+=2*Math.PI;this.angle+=.1*e;let a=this.baseSpeed*this.speedMultiplier;if(t&&this.boost>0?(a*=2.5,this.boost-=.4,this.boost<=0&&this.boostCapRemoved&&(this.boostCapRemoved=!1)):t||this.boost<this.maxBoost&&(this.boost+=.5),a*=this.getSpeedMultiplier(),this.x+=Math.cos(this.angle)*a,this.y+=Math.sin(this.angle)*a,this.x=Math.max(this.size,Math.min(4e3-this.size,this.x)),this.y=Math.max(this.size,Math.min(4e3-this.size,this.y)),this.segments[0].x=this.x,this.segments[0].y=this.y,this.gameInstance&&"classic"===this.gameInstance.gameMode){const t=this.pathHistory[this.pathHistory.length-1];Math.hypot(this.x-t.x,this.y-t.y)>=this.pathRecordDistance&&(this.pathHistory.push({x:this.x,y:this.y}),this.pathHistory.length>this.maxPathLength&&this.pathHistory.shift())}this.handleGrowth(),this.updatePowerups(),this.updateInvincibility(),this.gameInstance&&"classic"===this.gameInstance.gameMode?this.updateSegmentsClassicMode():this.updateSegmentsWarfareMode()}updateSegmentsClassicMode(){if(this.pathHistory.length<2||this.segments.length<2)return;let t=0;for(let e=1;e<this.pathHistory.length;e++){const a=this.pathHistory[e],i=this.pathHistory[e-1];t+=Math.hypot(a.x-i.x,a.y-i.y)}if(t<(this.segments.length-1)*this.segmentDistance)this.updateSegmentsWarfareMode();else for(let e=1;e<this.segments.length;e++){const t=e*this.segmentDistance;let a=0,i=null;for(let e=this.pathHistory.length-1;e>0;e--){const s=this.pathHistory[e],o=this.pathHistory[e-1],n=Math.hypot(s.x-o.x,s.y-o.y);if(a+n>=t){const e=n>0?(t-a)/n:0;i={x:s.x-(s.x-o.x)*e,y:s.y-(s.y-o.y)*e};break}a+=n}if(i){const t=.8;this.segments[e].x+=(i.x-this.segments[e].x)*t,this.segments[e].y+=(i.y-this.segments[e].y)*t}else{const t=this.pathHistory[0];if(t){const a=.3;this.segments[e].x+=(t.x-this.segments[e].x)*a,this.segments[e].y+=(t.y-this.segments[e].y)*a}}}}updateSegmentsWarfareMode(){for(let t=1;t<this.segments.length;t++){const e=this.segments[t-1],a=this.segments[t],i=e.x-a.x,s=e.y-a.y;if(Math.hypot(i,s)>this.segmentDistance){const t=Math.atan2(s,i),o=e.x-Math.cos(t)*this.segmentDistance,n=e.y-Math.sin(t)*this.segmentDistance,h=.3;a.x+=(o-a.x)*h,a.y+=(n-a.y)*h}}}activateSpawnInvincibility(t){const e=Math.min(1e3+20*t,3e3);this.invincible=!0,this.invincibilityEndTime=Date.now()+e,this.blinkPhase=0,console.log("Snake activated invincibility for ".concat(e/1e3," seconds (cash: $").concat(t,")"))}updateInvincibility(){if(this.invincible){Date.now()>=this.invincibilityEndTime?(this.invincible=!1,console.log("Snake invincibility expired")):this.blinkPhase+=.3}}isInvincible(){return this.invincible&&Date.now()<this.invincibilityEndTime}handleGrowth(){const t=this.getTargetLength(),e=this.segments.length;t>e?(this.growthProgress+=2*this.growthRate,this.growthProgress>=1&&(this.addSegment(),this.growthProgress=0)):t<e&&e>3&&(this.shrinkProgress=(this.shrinkProgress||0)+this.growthRate,this.shrinkProgress>=1&&(this.removeSegment(),this.shrinkProgress=0))}addSegment(){if(this.segments.length<2){const t=this.segments[0];this.segments.push({x:t.x-Math.cos(this.angle)*this.segmentDistance,y:t.y-Math.sin(this.angle)*this.segmentDistance,health:100,maxHealth:100})}else{const t=this.segments[0],e=this.segments[1],a={x:(t.x+e.x)/2,y:(t.y+e.y)/2,health:100,maxHealth:100};this.segments.splice(1,0,a)}}removeSegment(){this.segments.length>3&&this.segments.pop()}grow(){this.growthQueue+=2}addSpeedBoost(t){this.speedMultiplier+=t/100}generateAIPersonality(){const t=[{name:"Aggressive",aggression:.8,caution:.2,teamwork:.3},{name:"Tactical",aggression:.5,caution:.7,teamwork:.6},{name:"Sniper",aggression:.4,caution:.8,teamwork:.4},{name:"Berserker",aggression:.9,caution:.1,teamwork:.2},{name:"Support",aggression:.3,caution:.6,teamwork:.8},{name:"Hunter",aggression:.6,caution:.5,teamwork:.5}];return t[Math.floor(Math.random()*t.length)]}generateWeaponPreference(){const t=["laser","plasma","rocket","rail","balanced"];return t[Math.floor(Math.random()*t.length)]}addWeaponToInventory(t){if(this.weaponInventory)if(this.weaponInventory.primaryWeapon)if(this.weaponInventory.secondaryWeapon){const e=this.weaponInventory.currentSlot;"sidearm"!==e?(this.weaponInventory[e]=t,this.currentWeapon=t):(this.weaponInventory.primaryWeapon=t,this.switchToWeapon("primaryWeapon"))}else this.weaponInventory.secondaryWeapon=t,this.switchToWeapon("secondaryWeapon");else this.weaponInventory.primaryWeapon=t,this.switchToWeapon("primaryWeapon")}switchToWeapon(t){if(!this.weaponInventory)return;const e=this.weaponInventory[t];e&&(e.currentAmmo>0||e.maxAmmo===1/0)&&(this.lastWeaponSlot=this.weaponInventory.currentSlot,this.weaponInventory.currentSlot=t,this.currentWeapon=e)}addPowerup(t){this.powerupInventory.push({type:t.type,config:t.config,name:t.name,duration:t.duration,damageReduction:t.damageReduction,headProtection:t.headProtection,boostDamage:t.boostDamage,speedBoost:t.speedBoost,helmetHealth:t.helmetHealth,description:t.description})}activatePowerup(t){const e=this.powerupInventory.findIndex((e=>e.type===t));if(-1===e)return!1;const a=this.powerupInventory[e];this.powerupInventory.splice(e,1);const s=(0,i.A)((0,i.A)({},a),{},{startTime:Date.now(),expirationTime:Date.now()+a.duration,currentHelmetHealth:a.helmetHealth||0});return this.activePowerups=this.activePowerups.filter((e=>e.type!==t)),this.activePowerups.push(s),!0}updatePowerups(){const t=Date.now();this.activePowerups=this.activePowerups.filter((e=>t<e.expirationTime))}getDamageReduction(){let t=0;return this.activePowerups.forEach((e=>{e.damageReduction&&(t=Math.max(t,e.damageReduction))})),Math.min(t,.95)}getHeadProtection(){let t=0;return this.activePowerups.forEach((e=>{e.headProtection&&(t=Math.max(t,e.headProtection))})),Math.min(t,.99)}getBoostDamage(){let t=0;return this.activePowerups.forEach((e=>{e.boostDamage&&(t+=e.boostDamage)})),t}hasActivePowerup(t){return this.activePowerups.some((e=>e.type===t))}getSpeedMultiplier(){let t=1;return this.activePowerups.forEach((e=>{e.speedBoost&&(t*=e.speedBoost)})),t}damageHelmet(t){const e=this.activePowerups.find((t=>"helmet"===t.type));return e&&e.currentHelmetHealth>0?(e.currentHelmetHealth-=t,e.currentHelmetHealth<=0&&(this.activePowerups=this.activePowerups.filter((t=>"helmet"!==t.type)),!0)):null}getHelmetHealth(){const t=this.activePowerups.find((t=>"helmet"===t.type));return t?t.currentHelmetHealth:0}canShoot(){return this.currentWeapon&&this.currentWeapon.canShoot()}shoot(t,e){if(!this.canShoot())return!1;const a=t-this.x,i=e-this.y,s=Math.atan2(i,a),o=.3*(1-this.accuracy),n=s+(Math.random()-.5)*o;return!!this.currentWeapon.shoot()&&{x:this.x,y:this.y,vx:Math.cos(n)*this.currentWeapon.projectileSpeed,vy:Math.sin(n)*this.currentWeapon.projectileSpeed,angle:n,speed:this.currentWeapon.projectileSpeed,damage:this.currentWeapon.damage,type:this.currentWeapon.type,owner:this,animationOffset:Math.random()*Math.PI*2}}darkenColor(t,e){const a=t.replace("#",""),i=Math.max(0,parseInt(a.substr(0,2),16)*(1-e)),s=Math.max(0,parseInt(a.substr(2,2),16)*(1-e)),o=Math.max(0,parseInt(a.substr(4,2),16)*(1-e));return"rgb(".concat(Math.floor(i),", ").concat(Math.floor(s),", ").concat(Math.floor(o),")")}addAlpha(t,e){const a=t.replace("#",""),i=parseInt(a.substr(0,2),16),s=parseInt(a.substr(2,2),16),o=parseInt(a.substr(4,2),16);return"rgba(".concat(i,", ").concat(s,", ").concat(o,", ").concat(e,")")}}window.testGamepads=function(){if(console.log("\ud83c\udfae Testing gamepad connectivity..."),!("getGamepads"in navigator))return void console.log("\u274c Gamepad API not supported in this browser");const t=navigator.getGamepads();console.log("\ud83c\udfae Raw gamepad array:",t);let e=0;for(let a=0;a<t.length;a++)if(t[a]){e++,console.log("\ud83c\udfae Gamepad ".concat(a,":"),{id:t[a].id,connected:t[a].connected,buttons:t[a].buttons.length,axes:t[a].axes.length,mapping:t[a].mapping});const i=[];for(let e=0;e<t[a].buttons.length;e++)t[a].buttons[e].pressed&&i.push(e);i.length>0&&console.log("\ud83c\udfae Pressed buttons on gamepad ".concat(a,":"),i);const s=[];for(let e=0;e<t[a].axes.length;e++)Math.abs(t[a].axes[e])>.1&&s.push({axis:e,value:t[a].axes[e].toFixed(2)});s.length>0&&console.log("\ud83c\udfae Active axes on gamepad ".concat(a,":"),s)}0===e?console.log("\ud83c\udfae No gamepads detected. Make sure your controller is connected and press any button on it."):console.log("\ud83c\udfae Found ".concat(e," connected gamepad(s)"))}}}]);
//# sourceMappingURL=68.489f2833.chunk.js.map