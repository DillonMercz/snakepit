"use strict";(self.webpackChunksnakepit_react=self.webpackChunksnakepit_react||[]).push([[244],{244:(e,a,t)=>{t.d(a,{default:()=>o});var r=t(325);class n{constructor(){this.channel=null,this.currentRoom=null,this.playerId=null,this.gameInstance=null,this.updateInterval=null}static getInstance(){return n.instance||(n.instance=new n),n.instance}async initializeMultiplayer(e,a,t){return console.log("\ud83c\udf10 Initializing multiplayer service..."),this.gameInstance=e,this.playerId=a,e&&(e.playerId=a,e.isMultiplayer=!0),console.log("\u2705 Multiplayer service initialized"),!0}setGameInstance(e){this.gameInstance=e,e&&this.playerId&&(e.playerId=this.playerId,e.isMultiplayer=!0)}async createRoom(e,a){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8;try{console.log("\ud83c\udfe0 Creating new game room...",{gameMode:e,wagerAmount:a,maxPlayers:t});const n={name:"".concat(e.toUpperCase()," Room"),game_mode:e,max_players:t,current_players:1,wager_amount:a,status:"waiting",host_id:this.playerId,created_at:(new Date).toISOString()},{data:o,error:s}=await r.ND.from("game_rooms").insert(n).select().single();return s?(console.error("\u274c Error creating room:",s),null):(this.currentRoom={id:o.id,name:o.name,gameMode:o.game_mode,maxPlayers:o.max_players,currentPlayers:o.current_players,wagerAmount:o.wager_amount,status:o.status,createdAt:o.created_at,hostId:o.host_id},console.log("\u2705 Room created:",this.currentRoom),this.currentRoom)}catch(n){return console.error("\u274c Error creating room:",n),null}}async joinRoom(e){try{console.log("\ud83d\udeaa Joining room:",e);const{data:a,error:t}=await r.ND.from("game_rooms").select("*").eq("id",e).single();if(t||!a)return console.error("\u274c Room not found:",t),!1;if(a.current_players>=a.max_players)return console.error("\u274c Room is full"),!1;const{error:n}=await r.ND.from("game_rooms").update({current_players:a.current_players+1}).eq("id",e);return n?(console.error("\u274c Error updating room:",n),!1):(this.currentRoom={id:a.id,name:a.name,gameMode:a.game_mode,maxPlayers:a.max_players,currentPlayers:a.current_players+1,wagerAmount:a.wager_amount,status:a.status,createdAt:a.created_at,hostId:a.host_id},console.log("\u2705 Joined room:",this.currentRoom),!0)}catch(a){return console.error("\u274c Error joining room:",a),!1}}async connectToRoom(){if(!this.currentRoom)return console.error("\u274c No current room to connect to"),!1;try{return console.log("\ud83d\udd17 Connecting to real-time channel for room:",this.currentRoom.id),this.channel=r.ND.channel("game_room_".concat(this.currentRoom.id)),this.channel.on("broadcast",{event:"player_state"},(e=>{this.handlePlayerStateUpdate(e)})),this.channel.on("broadcast",{event:"game_event"},(e=>{this.handleGameEvent(e)})),this.channel.subscribe((e=>{var a,t;"SUBSCRIBED"===e?(console.log("\u2705 Connected to real-time channel"),this.startPlayerUpdates(),this.broadcastGameEvent({type:"player_joined",playerId:this.playerId,data:{username:(null===(a=this.gameInstance)||void 0===a||null===(t=a.player)||void 0===t?void 0:t.username)||"Unknown"},timestamp:Date.now()})):console.error("\u274c Failed to subscribe to channel:",e)})),!0}catch(e){return console.error("\u274c Error connecting to room:",e),!1}}startPlayerUpdates(){this.updateInterval&&clearInterval(this.updateInterval),this.updateInterval=setInterval((()=>{var e;if(null!==(e=this.gameInstance)&&void 0!==e&&e.player&&this.channel){var a,t;const e={id:this.playerId,username:this.gameInstance.player.username||"Unknown",x:this.gameInstance.player.x,y:this.gameInstance.player.y,angle:this.gameInstance.player.angle,segments:this.gameInstance.player.segments,color:this.gameInstance.player.color,alive:this.gameInstance.player.alive,cashBalance:this.gameInstance.cashBalance||0,boost:this.gameInstance.player.boost,size:this.gameInstance.player.size,wager:this.gameInstance.player.wager||50,isInvincible:(null===(a=(t=this.gameInstance.player).isInvincible)||void 0===a?void 0:a.call(t))||!1,lastUpdate:Date.now()};this.channel.send({type:"broadcast",event:"player_state",payload:e})}}),50)}handlePlayerStateUpdate(e){if(!this.gameInstance||e.payload.id===this.playerId)return;const a=e.payload;let t=this.gameInstance.remotePlayers.find((e=>e.id===a.id));t?(t.targetX=a.x,t.targetY=a.y,t.angle=a.angle,t.segments=a.segments,t.alive=a.alive,t.cashBalance=a.cashBalance,t.boost=a.boost,t.isInvincible=a.isInvincible):(t={id:a.id,username:a.username,x:a.x,y:a.y,angle:a.angle,segments:a.segments,color:a.color,alive:a.alive,cashBalance:a.cashBalance,boost:a.boost,size:a.size,wager:a.wager,isInvincible:a.isInvincible,segmentDistance:15,isPlayer:!1},this.gameInstance.remotePlayers.push(t),console.log("\ud83d\udc64 New player joined:",a.username))}handleGameEvent(e){const a=e.payload;switch(console.log("\ud83c\udfae Game event received:",a),a.type){case"player_joined":console.log("\ud83d\udc4b ".concat(a.data.username," joined the game"));break;case"player_left":console.log("\ud83d\udc4b Player left the game"),this.gameInstance&&(this.gameInstance.remotePlayers=this.gameInstance.remotePlayers.filter((e=>e.id!==a.playerId)));break;case"player_death":console.log("\ud83d\udc80 Player died:",a.data)}}broadcastGameEvent(e){this.channel&&this.channel.send({type:"broadcast",event:"game_event",payload:e})}async leaveRoom(){if(this.updateInterval&&(clearInterval(this.updateInterval),this.updateInterval=null),this.channel&&(this.broadcastGameEvent({type:"player_left",playerId:this.playerId,data:{},timestamp:Date.now()}),await this.channel.unsubscribe(),this.channel=null),this.currentRoom)try{await r.ND.from("game_rooms").update({current_players:Math.max(0,this.currentRoom.currentPlayers-1)}).eq("id",this.currentRoom.id)}catch(e){console.error("\u274c Error updating room on leave:",e)}this.currentRoom=null,console.log("\ud83d\udc4b Left room")}getCurrentRoom(){return this.currentRoom}async getAvailableRooms(){try{const{data:e,error:a}=await r.ND.rpc("get_available_rooms");return a?(console.error("\u274c Error fetching rooms:",a),[]):e.map((e=>({id:e.room_id,name:e.room_name,gameMode:e.game_mode,maxPlayers:e.max_players,currentPlayers:e.current_players,wagerAmount:e.wager_amount,status:"waiting",createdAt:e.created_at,hostId:e.host_username})))}catch(e){return console.error("\u274c Error fetching rooms:",e),[]}}cleanup(){this.leaveRoom(),this.gameInstance=null,this.playerId=null}}n.instance=void 0;const o=n}}]);
//# sourceMappingURL=244.03449e78.chunk.js.map